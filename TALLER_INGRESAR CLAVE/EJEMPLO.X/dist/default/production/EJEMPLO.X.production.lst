

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Sep 29 07:36:34 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28  0000                     
    29                           ; Version 2.30
    30                           ; Generated 26/08/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4550 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataCOMRAM
    66  00127C                     __pidataCOMRAM:
    67                           	callstack 0
    68                           
    69                           ;initializer for main@F3724
    70  00127C  0009               	dw	9
    71  00127E  0003               	dw	3
    72  001280  0006               	dw	6
    73  001282  000C               	dw	12
    74                           
    75                           ;initializer for main@F3722
    76  001284  000C               	dw	12
    77  001286  0006               	dw	6
    78  001288  0003               	dw	3
    79  00128A  0009               	dw	9
    80                           
    81                           	psect	idataBANK0
    82  00128C                     __pidataBANK0:
    83                           	callstack 0
    84                           
    85                           ;initializer for teclado_getc@F3196
    86  00128C  31                 	db	49
    87  00128D  32                 	db	50
    88  00128E  33                 	db	51
    89  00128F  41                 	db	65
    90  001290  34                 	db	52
    91  001291  35                 	db	53
    92  001292  36                 	db	54
    93  001293  42                 	db	66
    94  001294  37                 	db	55
    95  001295  38                 	db	56
    96  001296  39                 	db	57
    97  001297  43                 	db	67
    98  001298  2A                 	db	42
    99  001299  30                 	db	48
   100  00129A  23                 	db	35
   101  00129B  44                 	db	68
   102  0000                     _EECON2	set	4007
   103  0000                     _INTCONbits	set	4082
   104  0000                     _EECON1bits	set	4006
   105  0000                     _EEDATA	set	4008
   106  0000                     _EEADR	set	4009
   107  0000                     _PORTB	set	3969
   108  0000                     _LATB	set	3978
   109  0000                     _INTCON2bits	set	4081
   110  0000                     _TRISB	set	3987
   111  0000                     _TRISDbits	set	3989
   112  0000                     _LATDbits	set	3980
   113  0000                     _PORTDbits	set	3971
   114  0000                     _PORTC	set	3970
   115  0000                     _TRISD	set	3989
   116  0000                     _TRISC	set	3988
   117                           
   118                           	psect	smallconst
   119  000800                     __psmallconst:
   120                           	callstack 0
   121  000800  00                 	db	0
   122  000801                     STR_4:
   123  000801  20                 	db	32
   124  000802  43                 	db	67	;'C'
   125  000803  4C                 	db	76	;'L'
   126  000804  41                 	db	65	;'A'
   127  000805  56                 	db	86	;'V'
   128  000806  45                 	db	69	;'E'
   129  000807  20                 	db	32
   130  000808  43                 	db	67	;'C'
   131  000809  4F                 	db	79	;'O'
   132  00080A  52                 	db	82	;'R'
   133  00080B  52                 	db	82	;'R'
   134  00080C  45                 	db	69	;'E'
   135  00080D  43                 	db	67	;'C'
   136  00080E  54                 	db	84	;'T'
   137  00080F  41                 	db	65	;'A'
   138  000810  20                 	db	32
   139  000811  00                 	db	0
   140  000812                     STR_6:
   141  000812  43                 	db	67	;'C'
   142  000813  4C                 	db	76	;'L'
   143  000814  41                 	db	65	;'A'
   144  000815  56                 	db	86	;'V'
   145  000816  45                 	db	69	;'E'
   146  000817  20                 	db	32
   147  000818  49                 	db	73	;'I'
   148  000819  4E                 	db	78	;'N'
   149  00081A  43                 	db	67	;'C'
   150  00081B  4F                 	db	79	;'O'
   151  00081C  52                 	db	82	;'R'
   152  00081D  52                 	db	82	;'R'
   153  00081E  45                 	db	69	;'E'
   154  00081F  43                 	db	67	;'C'
   155  000820  54                 	db	84	;'T'
   156  000821  41                 	db	65	;'A'
   157  000822  00                 	db	0
   158  000823                     STR_5:
   159  000823  20                 	db	32
   160  000824  2A                 	db	42
   161  000825  42                 	db	66	;'B'
   162  000826  49                 	db	73	;'I'
   163  000827  45                 	db	69	;'E'
   164  000828  4E                 	db	78	;'N'
   165  000829  56                 	db	86	;'V'
   166  00082A  45                 	db	69	;'E'
   167  00082B  4E                 	db	78	;'N'
   168  00082C  49                 	db	73	;'I'
   169  00082D  44                 	db	68	;'D'
   170  00082E  4F                 	db	79	;'O'
   171  00082F  2A                 	db	42
   172  000830  20                 	db	32
   173  000831  00                 	db	0
   174  000832                     STR_1:
   175  000832  49                 	db	73	;'I'
   176  000833  4E                 	db	78	;'N'
   177  000834  47                 	db	71	;'G'
   178  000835  52                 	db	82	;'R'
   179  000836  45                 	db	69	;'E'
   180  000837  53                 	db	83	;'S'
   181  000838  41                 	db	65	;'A'
   182  000839  52                 	db	82	;'R'
   183  00083A  20                 	db	32
   184  00083B  43                 	db	67	;'C'
   185  00083C  4C                 	db	76	;'L'
   186  00083D  41                 	db	65	;'A'
   187  00083E  56                 	db	86	;'V'
   188  00083F  45                 	db	69	;'E'
   189  000840  00                 	db	0
   190  000841                     STR_7:
   191  000841  2A                 	db	42
   192  000842  2A                 	db	42
   193  000843  42                 	db	66	;'B'
   194  000844  4C                 	db	76	;'L'
   195  000845  4F                 	db	79	;'O'
   196  000846  51                 	db	81	;'Q'
   197  000847  55                 	db	85	;'U'
   198  000848  45                 	db	69	;'E'
   199  000849  4F                 	db	79	;'O'
   200  00084A  2A                 	db	42
   201  00084B  2A                 	db	42
   202  00084C  00                 	db	0
   203  00084D  00                 	db	0	; dummy byte at the end
   204  0000                     
   205                           ; #config settings
   206                           
   207                           	psect	cinit
   208  0011BE                     __pcinit:
   209                           	callstack 0
   210  0011BE                     start_initialization:
   211                           	callstack 0
   212  0011BE                     __initialization:
   213                           	callstack 0
   214                           
   215                           ; Initialize objects allocated to BANK0 (16 bytes)
   216                           ; load TBLPTR registers with __pidataBANK0
   217  0011BE  0E8C               	movlw	low __pidataBANK0
   218  0011C0  6EF6               	movwf	tblptrl,c
   219  0011C2  0E12               	movlw	high __pidataBANK0
   220  0011C4  6EF7               	movwf	tblptrh,c
   221  0011C6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   222  0011C8  6EF8               	movwf	tblptru,c
   223  0011CA  EE00  F060         	lfsr	0,__pdataBANK0
   224  0011CE  EE10 F010          	lfsr	1,16
   225  0011D2                     copy_data0:
   226  0011D2  0009               	tblrd		*+
   227  0011D4  CFF5 FFEE          	movff	tablat,postinc0
   228  0011D8  50E5               	movf	postdec1,w,c
   229  0011DA  50E1               	movf	fsr1l,w,c
   230  0011DC  E1FA               	bnz	copy_data0
   231                           
   232                           ; Initialize objects allocated to COMRAM (16 bytes)
   233                           ; load TBLPTR registers with __pidataCOMRAM
   234  0011DE  0E7C               	movlw	low __pidataCOMRAM
   235  0011E0  6EF6               	movwf	tblptrl,c
   236  0011E2  0E12               	movlw	high __pidataCOMRAM
   237  0011E4  6EF7               	movwf	tblptrh,c
   238  0011E6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   239  0011E8  6EF8               	movwf	tblptru,c
   240  0011EA  EE00  F040         	lfsr	0,__pdataCOMRAM
   241  0011EE  EE10 F010          	lfsr	1,16
   242  0011F2                     copy_data1:
   243  0011F2  0009               	tblrd		*+
   244  0011F4  CFF5 FFEE          	movff	tablat,postinc0
   245  0011F8  50E5               	movf	postdec1,w,c
   246  0011FA  50E1               	movf	fsr1l,w,c
   247  0011FC  E1FA               	bnz	copy_data1
   248                           
   249                           ; Clear objects allocated to COMRAM (5 bytes)
   250  0011FE  6A54               	clrf	(__pbssCOMRAM+4)& (0+255),c
   251  001200  6A53               	clrf	(__pbssCOMRAM+3)& (0+255),c
   252  001202  6A52               	clrf	(__pbssCOMRAM+2)& (0+255),c
   253  001204  6A51               	clrf	(__pbssCOMRAM+1)& (0+255),c
   254  001206  6A50               	clrf	__pbssCOMRAM& (0+255),c
   255  001208                     end_of_initialization:
   256                           	callstack 0
   257  001208                     __end_of__initialization:
   258                           	callstack 0
   259  001208  0E00               	movlw	low (__Lmediumconst shr (0+16))
   260  00120A  6EF8               	movwf	tblptru,c
   261  00120C  0100               	movlb	0
   262  00120E  EF27  F004         	goto	_main	;jump to C main() function
   263                           
   264                           	psect	bssCOMRAM
   265  000050                     __pbssCOMRAM:
   266                           	callstack 0
   267  000050                     	ds	5
   268                           
   269                           	psect	dataCOMRAM
   270  000040                     __pdataCOMRAM:
   271                           	callstack 0
   272  000040                     main@F3724:
   273                           	callstack 0
   274  000040                     	ds	8
   275  000048                     main@F3722:
   276                           	callstack 0
   277  000048                     	ds	8
   278                           
   279                           	psect	dataBANK0
   280  000060                     __pdataBANK0:
   281                           	callstack 0
   282  000060                     teclado_getc@F3196:
   283                           	callstack 0
   284  000060                     	ds	16
   285                           
   286                           	psect	cstackCOMRAM
   287  000001                     __pcstackCOMRAM:
   288                           	callstack 0
   289  000001                     LCD_putc@ch:
   290                           	callstack 0
   291  000001                     LCD_command@cmd:
   292                           	callstack 0
   293  000001                     eeprom_writex@address:
   294                           	callstack 0
   295  000001                     eeprom_readx@address:
   296                           	callstack 0
   297  000001                     teclado_getc@letras:
   298                           	callstack 0
   299                           
   300                           ; 16 bytes @ 0x0
   301  000001                     	ds	1
   302  000002                     ??_LCD_init:
   303  000002                     LCD_gotoxy@y:
   304                           	callstack 0
   305  000002                     LCD_puts@data:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x1
   309  000002                     	ds	1
   310  000003                     ??_LCD_gotoxy:
   311  000003                     eeprom_writex@data:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x2
   315  000003                     	ds	1
   316  000004                     LCD_puts@nBytes:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x3
   320  000004                     	ds	1
   321  000005                     ??_LCD_puts:
   322  000005                     LCD_gotoxy@DDRAMAddr:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x4
   326  000005                     	ds	1
   327  000006                     LCD_gotoxy@x:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x5
   331  000006                     	ds	1
   332  000007                     LCD_puts@i:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x6
   336  000007                     	ds	10
   337  000011                     teclado_getc@valor:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x10
   341  000011                     	ds	1
   342  000012                     teclado_getc@i:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x11
   346  000012                     	ds	2
   347  000014                     ??_main:
   348                           
   349                           ; 1 bytes @ 0x13
   350  000014                     	ds	2
   351  000016                     main@DERE:
   352                           	callstack 0
   353                           
   354                           ; 8 bytes @ 0x15
   355  000016                     	ds	8
   356  00001E                     main@IZQ:
   357                           	callstack 0
   358                           
   359                           ; 8 bytes @ 0x1D
   360  00001E                     	ds	8
   361  000026                     main@inclave:
   362                           	callstack 0
   363                           
   364                           ; 5 bytes @ 0x25
   365  000026                     	ds	5
   366  00002B                     main@clavechecktotal:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x2A
   370  00002B                     	ds	6
   371  000031                     main@clave1check:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x30
   375  000031                     	ds	2
   376  000033                     main@clave2check:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x32
   380  000033                     	ds	2
   381  000035                     main@clave3check:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x34
   385  000035                     	ds	2
   386  000037                     main@clave4check:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x36
   390  000037                     	ds	2
   391  000039                     main@countinclave:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x38
   395  000039                     	ds	2
   396  00003B                     main@direccion1:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x3A
   400  00003B                     	ds	1
   401  00003C                     main@direccion2:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0x3B
   405  00003C                     	ds	1
   406  00003D                     main@direccion3:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x3C
   410  00003D                     	ds	1
   411  00003E                     main@direccion4:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x3D
   415  00003E                     	ds	1
   416  00003F                     main@tecla:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x3E
   420  00003F                     	ds	1
   421                           
   422 ;;
   423 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   424 ;;
   425 ;; *************** function _main *****************
   426 ;; Defined at:
   427 ;;		line 79 in file "main.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;  IZQ             8   29[COMRAM] int [4]
   432 ;;  DERE            8   21[COMRAM] int [4]
   433 ;;  inclave         5   37[COMRAM] unsigned char [5]
   434 ;;  countinclave    2   56[COMRAM] int 
   435 ;;  clave4check     2   54[COMRAM] int 
   436 ;;  clave3check     2   52[COMRAM] int 
   437 ;;  clave2check     2   50[COMRAM] int 
   438 ;;  clave1check     2   48[COMRAM] int 
   439 ;;  clavecheckto    2   42[COMRAM] int 
   440 ;;  tecla           1   62[COMRAM] unsigned char 
   441 ;;  direccion4      1   61[COMRAM] unsigned char 
   442 ;;  direccion3      1   60[COMRAM] unsigned char 
   443 ;;  direccion2      1   59[COMRAM] unsigned char 
   444 ;;  direccion1      1   58[COMRAM] unsigned char 
   445 ;;  clave4          1    0        unsigned char 
   446 ;;  clave3          1    0        unsigned char 
   447 ;;  clave2          1    0        unsigned char 
   448 ;;  clave1          1    0        unsigned char 
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   458 ;;      Params:         0       0       0       0       0       0       0       0       0
   459 ;;      Locals:        42       0       0       0       0       0       0       0       0
   460 ;;      Temps:          2       0       0       0       0       0       0       0       0
   461 ;;      Totals:        44       0       0       0       0       0       0       0       0
   462 ;;Total ram usage:       44 bytes
   463 ;; Hardware stack levels required when called:    3
   464 ;; This function calls:
   465 ;;		_LCD_clear
   466 ;;		_LCD_gotoxy
   467 ;;		_LCD_init
   468 ;;		_LCD_puts
   469 ;;		_eeprom_readx
   470 ;;		_eeprom_writex
   471 ;;		_teclado_getc
   472 ;;		_teclado_init
   473 ;; This function is called by:
   474 ;;		Startup code after reset
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           	psect	text0
   479  00084E                     __ptext0:
   480                           	callstack 0
   481  00084E                     _main:
   482                           	callstack 28
   483  00084E                     l31:
   484  00084E                     
   485                           ;main.c: 81:     TRISC = 0;
   486  00084E  0E00               	movlw	0
   487  000850  6E94               	movwf	148,c	;volatile
   488                           
   489                           ;main.c: 82:     TRISD = 0;
   490  000852  0E00               	movlw	0
   491  000854  6E95               	movwf	149,c	;volatile
   492  000856                     
   493                           ;main.c: 85:     char inclave[5] = {0};
   494  000856  EE20  F026         	lfsr	2,main@inclave
   495  00085A  0E04               	movlw	4
   496  00085C                     u861:
   497  00085C  6ADE               	clrf	postinc2,c
   498  00085E  06E8               	decf	wreg,f,c
   499  000860  E2FD               	bc	u861
   500  000862                     
   501                           ;main.c: 86:     int countinclave = 0;
   502  000862  0E00               	movlw	0
   503  000864  6E3A               	movwf	(main@countinclave+1)^0,c
   504  000866  0E00               	movlw	0
   505  000868  6E39               	movwf	main@countinclave^0,c
   506  00086A                     
   507                           ;main.c: 96:     char direccion1 = 0b0011;
   508  00086A  0E03               	movlw	3
   509  00086C  6E3B               	movwf	main@direccion1^0,c
   510  00086E                     
   511                           ;main.c: 97:     char direccion2 = 0b0101;
   512  00086E  0E05               	movlw	5
   513  000870  6E3C               	movwf	main@direccion2^0,c
   514  000872                     
   515                           ;main.c: 98:     char direccion3 = 0b1000;
   516  000872  0E08               	movlw	8
   517  000874  6E3D               	movwf	main@direccion3^0,c
   518  000876                     
   519                           ;main.c: 99:     char direccion4 = 0b1001;
   520  000876  0E09               	movlw	9
   521  000878  6E3E               	movwf	main@direccion4^0,c
   522  00087A                     
   523                           ;main.c: 101:     int DERE[4] = {0b1100, 0b0110, 0b0011, 0b1001};
   524  00087A  EE20  F048         	lfsr	2,main@F3722
   525  00087E  EE10  F016         	lfsr	1,main@DERE
   526  000882  0E07               	movlw	7
   527  000884                     u871:
   528  000884  CFDB FFE3          	movff	plusw2,plusw1
   529  000888  06E8               	decf	wreg,f,c
   530  00088A  E2FC               	bc	u871
   531  00088C                     
   532                           ;main.c: 102:     int IZQ[4] = {0b1001, 0b0011, 0b0110, 0b1100};
   533  00088C  EE20  F040         	lfsr	2,main@F3724
   534  000890  EE10  F01E         	lfsr	1,main@IZQ
   535  000894  0E07               	movlw	7
   536  000896                     u881:
   537  000896  CFDB FFE3          	movff	plusw2,plusw1
   538  00089A  06E8               	decf	wreg,f,c
   539  00089C  E2FC               	bc	u881
   540  00089E                     
   541                           ;main.c: 104:     if (eeprom_readx(direccion1) == 0xff) {
   542  00089E  0E00               	movlw	0
   543  0008A0  6E02               	movwf	(eeprom_readx@address+1)^0,c
   544  0008A2  0E03               	movlw	3
   545  0008A4  6E01               	movwf	eeprom_readx@address^0,c
   546  0008A6  EC4E  F009         	call	_eeprom_readx	;wreg free
   547  0008AA  0AFF               	xorlw	255
   548  0008AC  A4D8               	btfss	status,2,c
   549  0008AE  EF5B  F004         	goto	u891
   550  0008B2  EF5D  F004         	goto	u890
   551  0008B6                     u891:
   552  0008B6  EF65  F004         	goto	l38
   553  0008BA                     u890:
   554  0008BA                     
   555                           ;main.c: 105:         eeprom_writex(direccion1, clave1);
   556  0008BA  0E00               	movlw	0
   557  0008BC  6E02               	movwf	(eeprom_writex@address+1)^0,c
   558  0008BE  0E03               	movlw	3
   559  0008C0  6E01               	movwf	eeprom_writex@address^0,c
   560  0008C2  0E33               	movlw	51
   561  0008C4  6E03               	movwf	eeprom_writex@data^0,c
   562  0008C6  EC28  F009         	call	_eeprom_writex	;wreg free
   563  0008CA                     l38:
   564                           
   565                           ;main.c: 107:     if (eeprom_readx(direccion2) ==0xff ) {
   566  0008CA  0E00               	movlw	0
   567  0008CC  6E02               	movwf	(eeprom_readx@address+1)^0,c
   568  0008CE  0E05               	movlw	5
   569  0008D0  6E01               	movwf	eeprom_readx@address^0,c
   570  0008D2  EC4E  F009         	call	_eeprom_readx	;wreg free
   571  0008D6  0AFF               	xorlw	255
   572  0008D8  A4D8               	btfss	status,2,c
   573  0008DA  EF71  F004         	goto	u901
   574  0008DE  EF73  F004         	goto	u900
   575  0008E2                     u901:
   576  0008E2  EF7B  F004         	goto	l39
   577  0008E6                     u900:
   578  0008E6                     
   579                           ;main.c: 108:         eeprom_writex(direccion2, clave2);
   580  0008E6  0E00               	movlw	0
   581  0008E8  6E02               	movwf	(eeprom_writex@address+1)^0,c
   582  0008EA  0E05               	movlw	5
   583  0008EC  6E01               	movwf	eeprom_writex@address^0,c
   584  0008EE  0E35               	movlw	53
   585  0008F0  6E03               	movwf	eeprom_writex@data^0,c
   586  0008F2  EC28  F009         	call	_eeprom_writex	;wreg free
   587  0008F6                     l39:
   588                           
   589                           ;main.c: 110:     if (eeprom_readx(direccion3) == 0xff) {
   590  0008F6  0E00               	movlw	0
   591  0008F8  6E02               	movwf	(eeprom_readx@address+1)^0,c
   592  0008FA  0E08               	movlw	8
   593  0008FC  6E01               	movwf	eeprom_readx@address^0,c
   594  0008FE  EC4E  F009         	call	_eeprom_readx	;wreg free
   595  000902  0AFF               	xorlw	255
   596  000904  A4D8               	btfss	status,2,c
   597  000906  EF87  F004         	goto	u911
   598  00090A  EF89  F004         	goto	u910
   599  00090E                     u911:
   600  00090E  EF91  F004         	goto	l40
   601  000912                     u910:
   602  000912                     
   603                           ;main.c: 111:         eeprom_writex(direccion3, clave3);
   604  000912  0E00               	movlw	0
   605  000914  6E02               	movwf	(eeprom_writex@address+1)^0,c
   606  000916  0E08               	movlw	8
   607  000918  6E01               	movwf	eeprom_writex@address^0,c
   608  00091A  0E38               	movlw	56
   609  00091C  6E03               	movwf	eeprom_writex@data^0,c
   610  00091E  EC28  F009         	call	_eeprom_writex	;wreg free
   611  000922                     l40:
   612                           
   613                           ;main.c: 113:     if (eeprom_readx(direccion4) == 255) {
   614  000922  0E00               	movlw	0
   615  000924  6E02               	movwf	(eeprom_readx@address+1)^0,c
   616  000926  0E09               	movlw	9
   617  000928  6E01               	movwf	eeprom_readx@address^0,c
   618  00092A  EC4E  F009         	call	_eeprom_readx	;wreg free
   619  00092E  0AFF               	xorlw	255
   620  000930  A4D8               	btfss	status,2,c
   621  000932  EF9D  F004         	goto	u921
   622  000936  EF9F  F004         	goto	u920
   623  00093A                     u921:
   624  00093A  EFA7  F004         	goto	l41
   625  00093E                     u920:
   626  00093E                     
   627                           ;main.c: 114:         eeprom_writex(direccion4, clave4);
   628  00093E  0E00               	movlw	0
   629  000940  6E02               	movwf	(eeprom_writex@address+1)^0,c
   630  000942  0E09               	movlw	9
   631  000944  6E01               	movwf	eeprom_writex@address^0,c
   632  000946  0E39               	movlw	57
   633  000948  6E03               	movwf	eeprom_writex@data^0,c
   634  00094A  EC28  F009         	call	_eeprom_writex	;wreg free
   635  00094E                     l41:
   636                           
   637                           ;main.c: 118:     LCD_init();
   638  00094E  EC59  F008         	call	_LCD_init	;wreg free
   639  000952                     
   640                           ;main.c: 119:     teclado_init();
   641  000952  EC55  F009         	call	_teclado_init	;wreg free
   642  000956                     
   643                           ;main.c: 121:     LCD_gotoxy(2, 1);
   644  000956  0E01               	movlw	1
   645  000958  6E02               	movwf	LCD_gotoxy@y^0,c
   646  00095A  0E02               	movlw	2
   647  00095C  ECA7  F008         	call	_LCD_gotoxy
   648  000960                     
   649                           ;main.c: 122:     LCD_puts("INGRESAR CLAVE", 14);
   650  000960  0E32               	movlw	low STR_1
   651  000962  6E02               	movwf	LCD_puts@data^0,c
   652  000964  0E08               	movlw	high STR_1
   653  000966  6E03               	movwf	(LCD_puts@data+1)^0,c
   654  000968  0E0E               	movlw	14
   655  00096A  6E04               	movwf	LCD_puts@nBytes^0,c
   656  00096C  EC09  F009         	call	_LCD_puts	;wreg free
   657  000970                     l1500:
   658                           
   659                           ;main.c: 125:         tecla = teclado_getc();
   660  000970  EC70  F006         	call	_teclado_getc	;wreg free
   661  000974  6E3F               	movwf	main@tecla^0,c
   662  000976                     
   663                           ;main.c: 126:         if (tecla != 0) {
   664  000976  503F               	movf	main@tecla^0,w,c
   665  000978  B4D8               	btfsc	status,2,c
   666  00097A  EFC1  F004         	goto	u931
   667  00097E  EFC3  F004         	goto	u930
   668  000982                     u931:
   669  000982  EFB8  F004         	goto	l1500
   670  000986                     u930:
   671  000986                     
   672                           ;main.c: 129:             if (tecla != 'A' && tecla != 'B' && tecla != 'C' && tecla != '
      +                          D' && tecla != '#' && tecla != '*') {
   673  000986  0E41               	movlw	65
   674  000988  183F               	xorwf	main@tecla^0,w,c
   675  00098A  B4D8               	btfsc	status,2,c
   676  00098C  EFCA  F004         	goto	u941
   677  000990  EFCC  F004         	goto	u940
   678  000994                     u941:
   679  000994  EF1E  F005         	goto	l1528
   680  000998                     u940:
   681  000998  0E42               	movlw	66
   682  00099A  183F               	xorwf	main@tecla^0,w,c
   683  00099C  B4D8               	btfsc	status,2,c
   684  00099E  EFD3  F004         	goto	u951
   685  0009A2  EFD5  F004         	goto	u950
   686  0009A6                     u951:
   687  0009A6  EF1E  F005         	goto	l1528
   688  0009AA                     u950:
   689  0009AA  0E43               	movlw	67
   690  0009AC  183F               	xorwf	main@tecla^0,w,c
   691  0009AE  B4D8               	btfsc	status,2,c
   692  0009B0  EFDC  F004         	goto	u961
   693  0009B4  EFDE  F004         	goto	u960
   694  0009B8                     u961:
   695  0009B8  EF1E  F005         	goto	l1528
   696  0009BC                     u960:
   697  0009BC  0E44               	movlw	68
   698  0009BE  183F               	xorwf	main@tecla^0,w,c
   699  0009C0  B4D8               	btfsc	status,2,c
   700  0009C2  EFE5  F004         	goto	u971
   701  0009C6  EFE7  F004         	goto	u970
   702  0009CA                     u971:
   703  0009CA  EF1E  F005         	goto	l1528
   704  0009CE                     u970:
   705  0009CE  0E23               	movlw	35
   706  0009D0  183F               	xorwf	main@tecla^0,w,c
   707  0009D2  B4D8               	btfsc	status,2,c
   708  0009D4  EFEE  F004         	goto	u981
   709  0009D8  EFF0  F004         	goto	u980
   710  0009DC                     u981:
   711  0009DC  EF1E  F005         	goto	l1528
   712  0009E0                     u980:
   713  0009E0  0E2A               	movlw	42
   714  0009E2  183F               	xorwf	main@tecla^0,w,c
   715  0009E4  B4D8               	btfsc	status,2,c
   716  0009E6  EFF7  F004         	goto	u991
   717  0009EA  EFF9  F004         	goto	u990
   718  0009EE                     u991:
   719  0009EE  EF1E  F005         	goto	l1528
   720  0009F2                     u990:
   721  0009F2                     
   722                           ;main.c: 131:                 LCD_gotoxy(2, 1);
   723  0009F2  0E01               	movlw	1
   724  0009F4  6E02               	movwf	LCD_gotoxy@y^0,c
   725  0009F6  0E02               	movlw	2
   726  0009F8  ECA7  F008         	call	_LCD_gotoxy
   727  0009FC                     
   728                           ;main.c: 132:                 LCD_puts("INGRESAR CLAVE", 14);
   729  0009FC  0E32               	movlw	low STR_1
   730  0009FE  6E02               	movwf	LCD_puts@data^0,c
   731  000A00  0E08               	movlw	high STR_1
   732  000A02  6E03               	movwf	(LCD_puts@data+1)^0,c
   733  000A04  0E0E               	movlw	14
   734  000A06  6E04               	movwf	LCD_puts@nBytes^0,c
   735  000A08  EC09  F009         	call	_LCD_puts	;wreg free
   736  000A0C                     
   737                           ;main.c: 133:                 inclave[countinclave] = tecla;
   738  000A0C  0E26               	movlw	low main@inclave
   739  000A0E  2439               	addwf	main@countinclave^0,w,c
   740  000A10  6ED9               	movwf	fsr2l,c
   741  000A12  0E00               	movlw	high main@inclave
   742  000A14  203A               	addwfc	(main@countinclave+1)^0,w,c
   743  000A16  6EDA               	movwf	fsr2h,c
   744  000A18  C03F  FFDF         	movff	main@tecla,indf2
   745  000A1C                     
   746                           ;main.c: 134:                 countinclave++;
   747  000A1C  4A39               	infsnz	main@countinclave^0,f,c
   748  000A1E  2A3A               	incf	(main@countinclave+1)^0,f,c
   749  000A20                     
   750                           ;main.c: 135:                 LCD_gotoxy(countinclave + 5, 2);
   751  000A20  0E02               	movlw	2
   752  000A22  6E02               	movwf	LCD_gotoxy@y^0,c
   753  000A24  5039               	movf	main@countinclave^0,w,c
   754  000A26  0F05               	addlw	5
   755  000A28  ECA7  F008         	call	_LCD_gotoxy
   756  000A2C                     
   757                           ;main.c: 137:                 LCD_puts("*",2);
   758  000A2C  0E4B               	movlw	low (STR_7+10)
   759  000A2E  6E02               	movwf	LCD_puts@data^0,c
   760  000A30  0E08               	movlw	high (STR_7+10)
   761  000A32  6E03               	movwf	(LCD_puts@data+1)^0,c
   762  000A34  0E02               	movlw	2
   763  000A36  6E04               	movwf	LCD_puts@nBytes^0,c
   764  000A38  EC09  F009         	call	_LCD_puts	;wreg free
   765  000A3C                     l1528:
   766                           
   767                           ;main.c: 145:             if (tecla == '#')
   768  000A3C  0E23               	movlw	35
   769  000A3E  183F               	xorwf	main@tecla^0,w,c
   770  000A40  A4D8               	btfss	status,2,c
   771  000A42  EF25  F005         	goto	u1001
   772  000A46  EF27  F005         	goto	u1000
   773  000A4A                     u1001:
   774  000A4A  EFB8  F004         	goto	l1500
   775  000A4E                     u1000:
   776  000A4E                     
   777                           ;main.c: 146:             {;main.c: 147:                 if (eeprom_readx(direccion1) ==
      +                           inclave[0]) clave1check = 1;
   778  000A4E  C03B  F001         	movff	main@direccion1,eeprom_readx@address
   779  000A52  6A02               	clrf	(eeprom_readx@address+1)^0,c
   780  000A54  EC4E  F009         	call	_eeprom_readx	;wreg free
   781  000A58  1826               	xorwf	main@inclave^0,w,c
   782  000A5A  A4D8               	btfss	status,2,c
   783  000A5C  EF32  F005         	goto	u1011
   784  000A60  EF34  F005         	goto	u1010
   785  000A64                     u1011:
   786  000A64  EF3A  F005         	goto	l1534
   787  000A68                     u1010:
   788  000A68  0E00               	movlw	0
   789  000A6A  6E32               	movwf	(main@clave1check+1)^0,c
   790  000A6C  0E01               	movlw	1
   791  000A6E  6E31               	movwf	main@clave1check^0,c
   792  000A70  EF3E  F005         	goto	l1536
   793  000A74                     l1534:
   794  000A74  0E00               	movlw	0
   795  000A76  6E32               	movwf	(main@clave1check+1)^0,c
   796  000A78  0E00               	movlw	0
   797  000A7A  6E31               	movwf	main@clave1check^0,c
   798  000A7C                     l1536:
   799                           
   800                           ;main.c: 149:                 if (eeprom_readx(direccion2) == inclave[1]) clave2check = 
      +                          1;
   801  000A7C  C03C  F001         	movff	main@direccion2,eeprom_readx@address
   802  000A80  6A02               	clrf	(eeprom_readx@address+1)^0,c
   803  000A82  EC4E  F009         	call	_eeprom_readx	;wreg free
   804  000A86  1827               	xorwf	(main@inclave+1)^0,w,c
   805  000A88  A4D8               	btfss	status,2,c
   806  000A8A  EF49  F005         	goto	u1021
   807  000A8E  EF4B  F005         	goto	u1020
   808  000A92                     u1021:
   809  000A92  EF51  F005         	goto	l1540
   810  000A96                     u1020:
   811  000A96  0E00               	movlw	0
   812  000A98  6E34               	movwf	(main@clave2check+1)^0,c
   813  000A9A  0E01               	movlw	1
   814  000A9C  6E33               	movwf	main@clave2check^0,c
   815  000A9E  EF55  F005         	goto	l1542
   816  000AA2                     l1540:
   817  000AA2  0E00               	movlw	0
   818  000AA4  6E34               	movwf	(main@clave2check+1)^0,c
   819  000AA6  0E00               	movlw	0
   820  000AA8  6E33               	movwf	main@clave2check^0,c
   821  000AAA                     l1542:
   822                           
   823                           ;main.c: 151:                 if (eeprom_readx(direccion3) == inclave[2]) clave3check = 
      +                          1;
   824  000AAA  C03D  F001         	movff	main@direccion3,eeprom_readx@address
   825  000AAE  6A02               	clrf	(eeprom_readx@address+1)^0,c
   826  000AB0  EC4E  F009         	call	_eeprom_readx	;wreg free
   827  000AB4  1828               	xorwf	(main@inclave+2)^0,w,c
   828  000AB6  A4D8               	btfss	status,2,c
   829  000AB8  EF60  F005         	goto	u1031
   830  000ABC  EF62  F005         	goto	u1030
   831  000AC0                     u1031:
   832  000AC0  EF68  F005         	goto	l1546
   833  000AC4                     u1030:
   834  000AC4  0E00               	movlw	0
   835  000AC6  6E36               	movwf	(main@clave3check+1)^0,c
   836  000AC8  0E01               	movlw	1
   837  000ACA  6E35               	movwf	main@clave3check^0,c
   838  000ACC  EF6C  F005         	goto	l1548
   839  000AD0                     l1546:
   840  000AD0  0E00               	movlw	0
   841  000AD2  6E36               	movwf	(main@clave3check+1)^0,c
   842  000AD4  0E00               	movlw	0
   843  000AD6  6E35               	movwf	main@clave3check^0,c
   844  000AD8                     l1548:
   845                           
   846                           ;main.c: 153:                 if (eeprom_readx(direccion4) == inclave[3]) clave4check = 
      +                          1;
   847  000AD8  C03E  F001         	movff	main@direccion4,eeprom_readx@address
   848  000ADC  6A02               	clrf	(eeprom_readx@address+1)^0,c
   849  000ADE  EC4E  F009         	call	_eeprom_readx	;wreg free
   850  000AE2  1829               	xorwf	(main@inclave+3)^0,w,c
   851  000AE4  A4D8               	btfss	status,2,c
   852  000AE6  EF77  F005         	goto	u1041
   853  000AEA  EF79  F005         	goto	u1040
   854  000AEE                     u1041:
   855  000AEE  EF7F  F005         	goto	l1552
   856  000AF2                     u1040:
   857  000AF2  0E00               	movlw	0
   858  000AF4  6E38               	movwf	(main@clave4check+1)^0,c
   859  000AF6  0E01               	movlw	1
   860  000AF8  6E37               	movwf	main@clave4check^0,c
   861  000AFA  EF83  F005         	goto	l1554
   862  000AFE                     l1552:
   863  000AFE  0E00               	movlw	0
   864  000B00  6E38               	movwf	(main@clave4check+1)^0,c
   865  000B02  0E00               	movlw	0
   866  000B04  6E37               	movwf	main@clave4check^0,c
   867  000B06                     l1554:
   868                           
   869                           ;main.c: 156:                 clavechecktotal = clave1check + clave2check + clave3check+
      +                          clave4check;
   870  000B06  5033               	movf	main@clave2check^0,w,c
   871  000B08  2431               	addwf	main@clave1check^0,w,c
   872  000B0A  6E14               	movwf	??_main^0,c
   873  000B0C  5034               	movf	(main@clave2check+1)^0,w,c
   874  000B0E  2032               	addwfc	(main@clave1check+1)^0,w,c
   875  000B10  6E15               	movwf	(??_main+1)^0,c
   876  000B12  5035               	movf	main@clave3check^0,w,c
   877  000B14  2614               	addwf	??_main^0,f,c
   878  000B16  5036               	movf	(main@clave3check+1)^0,w,c
   879  000B18  2215               	addwfc	(??_main+1)^0,f,c
   880  000B1A  5037               	movf	main@clave4check^0,w,c
   881  000B1C  2414               	addwf	??_main^0,w,c
   882  000B1E  6E2B               	movwf	main@clavechecktotal^0,c
   883  000B20  5038               	movf	(main@clave4check+1)^0,w,c
   884  000B22  2015               	addwfc	(??_main+1)^0,w,c
   885  000B24  6E2C               	movwf	(main@clavechecktotal+1)^0,c
   886  000B26                     
   887                           ;main.c: 158:                 if (clavechecktotal == 4) {
   888  000B26  0E04               	movlw	4
   889  000B28  182B               	xorwf	main@clavechecktotal^0,w,c
   890  000B2A  102C               	iorwf	(main@clavechecktotal+1)^0,w,c
   891  000B2C  A4D8               	btfss	status,2,c
   892  000B2E  EF9B  F005         	goto	u1051
   893  000B32  EF9D  F005         	goto	u1050
   894  000B36                     u1051:
   895  000B36  EFED  F005         	goto	l1584
   896  000B3A                     u1050:
   897  000B3A                     
   898                           ;main.c: 159:                     LCD_gotoxy(1, 1);
   899  000B3A  0E01               	movlw	1
   900  000B3C  6E02               	movwf	LCD_gotoxy@y^0,c
   901  000B3E  0E01               	movlw	1
   902  000B40  ECA7  F008         	call	_LCD_gotoxy
   903  000B44                     
   904                           ;main.c: 160:                     LCD_puts(" CLAVE CORRECTA ",16);
   905  000B44  0E01               	movlw	low STR_4
   906  000B46  6E02               	movwf	LCD_puts@data^0,c
   907  000B48  0E08               	movlw	high STR_4
   908  000B4A  6E03               	movwf	(LCD_puts@data+1)^0,c
   909  000B4C  0E10               	movlw	16
   910  000B4E  6E04               	movwf	LCD_puts@nBytes^0,c
   911  000B50  EC09  F009         	call	_LCD_puts	;wreg free
   912  000B54                     
   913                           ;main.c: 161:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
   914  000B54  0E06               	movlw	6
   915  000B56  6E15               	movwf	(??_main+1)^0,c
   916  000B58  0E13               	movlw	19
   917  000B5A  6E14               	movwf	??_main^0,c
   918  000B5C  0EAE               	movlw	174
   919  000B5E                     u1067:
   920  000B5E  2EE8               	decfsz	wreg,f,c
   921  000B60  D7FE               	bra	u1067
   922  000B62  2E14               	decfsz	??_main^0,f,c
   923  000B64  D7FC               	bra	u1067
   924  000B66  2E15               	decfsz	(??_main+1)^0,f,c
   925  000B68  D7FA               	bra	u1067
   926  000B6A                     
   927                           ;main.c: 162:                     LCD_clear();
   928  000B6A  EC5B  F009         	call	_LCD_clear	;wreg free
   929  000B6E                     
   930                           ;main.c: 163:                     LCD_gotoxy(2, 1);
   931  000B6E  0E01               	movlw	1
   932  000B70  6E02               	movwf	LCD_gotoxy@y^0,c
   933  000B72  0E02               	movlw	2
   934  000B74  ECA7  F008         	call	_LCD_gotoxy
   935  000B78                     
   936                           ;main.c: 164:                     LCD_puts(" *BIENVENIDO* ", 16);
   937  000B78  0E23               	movlw	low STR_5
   938  000B7A  6E02               	movwf	LCD_puts@data^0,c
   939  000B7C  0E08               	movlw	high STR_5
   940  000B7E  6E03               	movwf	(LCD_puts@data+1)^0,c
   941  000B80  0E10               	movlw	16
   942  000B82  6E04               	movwf	LCD_puts@nBytes^0,c
   943  000B84  EC09  F009         	call	_LCD_puts	;wreg free
   944  000B88                     
   945                           ;main.c: 165:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
   946  000B88  0E06               	movlw	6
   947  000B8A  6E15               	movwf	(??_main+1)^0,c
   948  000B8C  0E13               	movlw	19
   949  000B8E  6E14               	movwf	??_main^0,c
   950  000B90  0EAE               	movlw	174
   951  000B92                     u1077:
   952  000B92  2EE8               	decfsz	wreg,f,c
   953  000B94  D7FE               	bra	u1077
   954  000B96  2E14               	decfsz	??_main^0,f,c
   955  000B98  D7FC               	bra	u1077
   956  000B9A  2E15               	decfsz	(??_main+1)^0,f,c
   957  000B9C  D7FA               	bra	u1077
   958  000B9E                     
   959                           ;main.c: 167:                     PORTC =IZQ;
   960  000B9E  0E1E               	movlw	low (low main@IZQ)
   961  000BA0  6E82               	movwf	130,c	;volatile
   962  000BA2                     
   963                           ;main.c: 168:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
   964  000BA2  0E06               	movlw	6
   965  000BA4  6E15               	movwf	(??_main+1)^0,c
   966  000BA6  0E13               	movlw	19
   967  000BA8  6E14               	movwf	??_main^0,c
   968  000BAA  0EAE               	movlw	174
   969  000BAC                     u1087:
   970  000BAC  2EE8               	decfsz	wreg,f,c
   971  000BAE  D7FE               	bra	u1087
   972  000BB0  2E14               	decfsz	??_main^0,f,c
   973  000BB2  D7FC               	bra	u1087
   974  000BB4  2E15               	decfsz	(??_main+1)^0,f,c
   975  000BB6  D7FA               	bra	u1087
   976  000BB8                     
   977                           ;main.c: 169:                     PORTC = 0B00000001;
   978  000BB8  0E01               	movlw	1
   979  000BBA  6E82               	movwf	130,c	;volatile
   980  000BBC                     
   981                           ;main.c: 170:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
   982  000BBC  0E06               	movlw	6
   983  000BBE  6E15               	movwf	(??_main+1)^0,c
   984  000BC0  0E13               	movlw	19
   985  000BC2  6E14               	movwf	??_main^0,c
   986  000BC4  0EAE               	movlw	174
   987  000BC6                     u1097:
   988  000BC6  2EE8               	decfsz	wreg,f,c
   989  000BC8  D7FE               	bra	u1097
   990  000BCA  2E14               	decfsz	??_main^0,f,c
   991  000BCC  D7FC               	bra	u1097
   992  000BCE  2E15               	decfsz	(??_main+1)^0,f,c
   993  000BD0  D7FA               	bra	u1097
   994  000BD2                     
   995                           ;main.c: 171:                     PORTC = 0;
   996  000BD2  0E00               	movlw	0
   997  000BD4  6E82               	movwf	130,c	;volatile
   998                           
   999                           ;main.c: 172:                     goto INICIO;
  1000  000BD6  EF27  F004         	goto	l31
  1001  000BDA                     l1584:
  1002                           
  1003                           ;main.c: 178:                     LCD_gotoxy(1, 1);
  1004  000BDA  0E01               	movlw	1
  1005  000BDC  6E02               	movwf	LCD_gotoxy@y^0,c
  1006  000BDE  0E01               	movlw	1
  1007  000BE0  ECA7  F008         	call	_LCD_gotoxy
  1008  000BE4                     
  1009                           ;main.c: 179:                     LCD_puts("CLAVE INCORRECTA",16);
  1010  000BE4  0E12               	movlw	low STR_6
  1011  000BE6  6E02               	movwf	LCD_puts@data^0,c
  1012  000BE8  0E08               	movlw	high STR_6
  1013  000BEA  6E03               	movwf	(LCD_puts@data+1)^0,c
  1014  000BEC  0E10               	movlw	16
  1015  000BEE  6E04               	movwf	LCD_puts@nBytes^0,c
  1016  000BF0  EC09  F009         	call	_LCD_puts	;wreg free
  1017  000BF4                     
  1018                           ;main.c: 180:                     _delay((unsigned long)((10)*(4000000/4000.0)));
  1019  000BF4  0E0D               	movlw	13
  1020  000BF6  6E14               	movwf	??_main^0,c
  1021  000BF8  0EFC               	movlw	252
  1022  000BFA                     u1107:
  1023  000BFA  2EE8               	decfsz	wreg,f,c
  1024  000BFC  D7FE               	bra	u1107
  1025  000BFE  2E14               	decfsz	??_main^0,f,c
  1026  000C00  D7FC               	bra	u1107
  1027  000C02                     
  1028                           ;main.c: 181:                     PORTDbits.RD3=1;
  1029  000C02  8683               	bsf	131,3,c	;volatile
  1030  000C04                     
  1031                           ;main.c: 182:                     _delay((unsigned long)((2000)*(4000000/4000.0)));
  1032  000C04  0E0B               	movlw	11
  1033  000C06  6E15               	movwf	(??_main+1)^0,c
  1034  000C08  0E26               	movlw	38
  1035  000C0A  6E14               	movwf	??_main^0,c
  1036  000C0C  0E5E               	movlw	94
  1037  000C0E                     u1117:
  1038  000C0E  2EE8               	decfsz	wreg,f,c
  1039  000C10  D7FE               	bra	u1117
  1040  000C12  2E14               	decfsz	??_main^0,f,c
  1041  000C14  D7FC               	bra	u1117
  1042  000C16  2E15               	decfsz	(??_main+1)^0,f,c
  1043  000C18  D7FA               	bra	u1117
  1044  000C1A                     
  1045                           ;main.c: 183:                     PORTDbits.RD3=0;
  1046  000C1A  9683               	bcf	131,3,c	;volatile
  1047  000C1C                     
  1048                           ;main.c: 184:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1049  000C1C  0E06               	movlw	6
  1050  000C1E  6E15               	movwf	(??_main+1)^0,c
  1051  000C20  0E13               	movlw	19
  1052  000C22  6E14               	movwf	??_main^0,c
  1053  000C24  0EAE               	movlw	174
  1054  000C26                     u1127:
  1055  000C26  2EE8               	decfsz	wreg,f,c
  1056  000C28  D7FE               	bra	u1127
  1057  000C2A  2E14               	decfsz	??_main^0,f,c
  1058  000C2C  D7FC               	bra	u1127
  1059  000C2E  2E15               	decfsz	(??_main+1)^0,f,c
  1060  000C30  D7FA               	bra	u1127
  1061  000C32                     
  1062                           ;main.c: 185:                     LCD_clear();
  1063  000C32  EC5B  F009         	call	_LCD_clear	;wreg free
  1064  000C36                     
  1065                           ;main.c: 186:                     LCD_gotoxy(3, 1);
  1066  000C36  0E01               	movlw	1
  1067  000C38  6E02               	movwf	LCD_gotoxy@y^0,c
  1068  000C3A  0E03               	movlw	3
  1069  000C3C  ECA7  F008         	call	_LCD_gotoxy
  1070  000C40                     
  1071                           ;main.c: 187:                     LCD_puts("**BLOQUEO**", 16);
  1072  000C40  0E41               	movlw	low STR_7
  1073  000C42  6E02               	movwf	LCD_puts@data^0,c
  1074  000C44  0E08               	movlw	high STR_7
  1075  000C46  6E03               	movwf	(LCD_puts@data+1)^0,c
  1076  000C48  0E10               	movlw	16
  1077  000C4A  6E04               	movwf	LCD_puts@nBytes^0,c
  1078  000C4C  EC09  F009         	call	_LCD_puts	;wreg free
  1079  000C50                     
  1080                           ;main.c: 188:                     _delay((unsigned long)((4000)*(4000000/4000.0)));
  1081  000C50  0E15               	movlw	21
  1082  000C52  6E15               	movwf	(??_main+1)^0,c
  1083  000C54  0E4B               	movlw	75
  1084  000C56  6E14               	movwf	??_main^0,c
  1085  000C58  0EBE               	movlw	190
  1086  000C5A                     u1137:
  1087  000C5A  2EE8               	decfsz	wreg,f,c
  1088  000C5C  D7FE               	bra	u1137
  1089  000C5E  2E14               	decfsz	??_main^0,f,c
  1090  000C60  D7FC               	bra	u1137
  1091  000C62  2E15               	decfsz	(??_main+1)^0,f,c
  1092  000C64  D7FA               	bra	u1137
  1093  000C66  D000               	nop2	
  1094  000C68                     
  1095                           ;main.c: 189:                     PORTC = 0B00000001;
  1096  000C68  0E01               	movlw	1
  1097  000C6A  6E82               	movwf	130,c	;volatile
  1098  000C6C                     
  1099                           ;main.c: 190:                     _delay((unsigned long)((500)*(4000000/4000.0)));
  1100  000C6C  0E03               	movlw	3
  1101  000C6E  6E15               	movwf	(??_main+1)^0,c
  1102  000C70  0E8A               	movlw	138
  1103  000C72  6E14               	movwf	??_main^0,c
  1104  000C74  0E56               	movlw	86
  1105  000C76                     u1147:
  1106  000C76  2EE8               	decfsz	wreg,f,c
  1107  000C78  D7FE               	bra	u1147
  1108  000C7A  2E14               	decfsz	??_main^0,f,c
  1109  000C7C  D7FC               	bra	u1147
  1110  000C7E  2E15               	decfsz	(??_main+1)^0,f,c
  1111  000C80  D7FA               	bra	u1147
  1112  000C82                     
  1113                           ;main.c: 191:                     PORTC = 0B0000001;
  1114  000C82  0E01               	movlw	1
  1115  000C84  6E82               	movwf	130,c	;volatile
  1116  000C86                     
  1117                           ;main.c: 192:                     _delay((unsigned long)((500)*(4000000/4000.0)));
  1118  000C86  0E03               	movlw	3
  1119  000C88  6E15               	movwf	(??_main+1)^0,c
  1120  000C8A  0E8A               	movlw	138
  1121  000C8C  6E14               	movwf	??_main^0,c
  1122  000C8E  0E56               	movlw	86
  1123  000C90                     u1157:
  1124  000C90  2EE8               	decfsz	wreg,f,c
  1125  000C92  D7FE               	bra	u1157
  1126  000C94  2E14               	decfsz	??_main^0,f,c
  1127  000C96  D7FC               	bra	u1157
  1128  000C98  2E15               	decfsz	(??_main+1)^0,f,c
  1129  000C9A  D7FA               	bra	u1157
  1130  000C9C                     
  1131                           ;main.c: 193:                     PORTC = 0B00000011;
  1132  000C9C  0E03               	movlw	3
  1133  000C9E  6E82               	movwf	130,c	;volatile
  1134  000CA0                     
  1135                           ;main.c: 194:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1136  000CA0  0E06               	movlw	6
  1137  000CA2  6E15               	movwf	(??_main+1)^0,c
  1138  000CA4  0E13               	movlw	19
  1139  000CA6  6E14               	movwf	??_main^0,c
  1140  000CA8  0EAE               	movlw	174
  1141  000CAA                     u1167:
  1142  000CAA  2EE8               	decfsz	wreg,f,c
  1143  000CAC  D7FE               	bra	u1167
  1144  000CAE  2E14               	decfsz	??_main^0,f,c
  1145  000CB0  D7FC               	bra	u1167
  1146  000CB2  2E15               	decfsz	(??_main+1)^0,f,c
  1147  000CB4  D7FA               	bra	u1167
  1148  000CB6                     
  1149                           ;main.c: 195:                     PORTC = 0;
  1150  000CB6  0E00               	movlw	0
  1151  000CB8  6E82               	movwf	130,c	;volatile
  1152  000CBA                     
  1153                           ;main.c: 196:                     LCD_clear();
  1154  000CBA  EC5B  F009         	call	_LCD_clear	;wreg free
  1155  000CBE                     
  1156                           ;main.c: 197:                     LCD_gotoxy(2, 1);
  1157  000CBE  0E01               	movlw	1
  1158  000CC0  6E02               	movwf	LCD_gotoxy@y^0,c
  1159  000CC2  0E02               	movlw	2
  1160  000CC4  ECA7  F008         	call	_LCD_gotoxy
  1161  000CC8                     
  1162                           ;main.c: 198:                     LCD_puts("INGRESAR CLAVE",16);
  1163  000CC8  0E32               	movlw	low STR_1
  1164  000CCA  6E02               	movwf	LCD_puts@data^0,c
  1165  000CCC  0E08               	movlw	high STR_1
  1166  000CCE  6E03               	movwf	(LCD_puts@data+1)^0,c
  1167  000CD0  0E10               	movlw	16
  1168  000CD2  6E04               	movwf	LCD_puts@nBytes^0,c
  1169  000CD4  EC09  F009         	call	_LCD_puts	;wreg free
  1170                           
  1171                           ;main.c: 201:                     goto INICIO;
  1172  000CD8  EF27  F004         	goto	l31
  1173  000CDC  EF00  F000         	goto	start
  1174  000CE0                     __end_of_main:
  1175                           	callstack 0
  1176                           
  1177 ;; *************** function _teclado_init *****************
  1178 ;; Defined at:
  1179 ;;		line 12 in file "teclado.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;		None
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1193 ;;      Params:         0       0       0       0       0       0       0       0       0
  1194 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1196 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1197 ;;Total ram usage:        0 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text1
  1207  0012AA                     __ptext1:
  1208                           	callstack 0
  1209  0012AA                     _teclado_init:
  1210                           	callstack 30
  1211  0012AA                     
  1212                           ;teclado.c: 14:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
  1213  0012AA  0EF0               	movlw	240
  1214  0012AC  1693               	andwf	147,f,c	;volatile
  1215                           
  1216                           ;teclado.c: 15:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
  1217  0012AE  0EF0               	movlw	240
  1218  0012B0  1293               	iorwf	147,f,c	;volatile
  1219  0012B2                     
  1220                           ;teclado.c: 16:     INTCON2bits.RBPU = 0;
  1221  0012B2  9EF1               	bcf	241,7,c	;volatile
  1222  0012B4  0012               	return		;funcret
  1223  0012B6                     __end_of_teclado_init:
  1224                           	callstack 0
  1225                           
  1226 ;; *************** function _teclado_getc *****************
  1227 ;; Defined at:
  1228 ;;		line 19 in file "teclado.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  letras         16    0[COMRAM] unsigned char [4][4]
  1233 ;;  i               2   17[COMRAM] int 
  1234 ;;  valor           1   16[COMRAM] unsigned char 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      unsigned char 
  1237 ;; Registers used:
  1238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1244 ;;      Params:         0       0       0       0       0       0       0       0       0
  1245 ;;      Locals:        19       0       0       0       0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1247 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1248 ;;Total ram usage:       19 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		_main
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           	psect	text2
  1258  000CE0                     __ptext2:
  1259                           	callstack 0
  1260  000CE0                     _teclado_getc:
  1261                           	callstack 30
  1262  000CE0                     
  1263                           ;teclado.c: 21: char letras[4][4]={ {'1','2','3','A'},
  1264  000CE0  EE20  F060         	lfsr	2,teclado_getc@F3196
  1265  000CE4  EE10  F001         	lfsr	1,teclado_getc@letras
  1266  000CE8  0E0F               	movlw	15
  1267  000CEA                     u641:
  1268  000CEA  CFDB FFE3          	movff	plusw2,plusw1
  1269  000CEE  06E8               	decf	wreg,f,c
  1270  000CF0  E2FC               	bc	u641
  1271  000CF2                     
  1272                           ;teclado.c: 26: char valor=0;
  1273  000CF2  0E00               	movlw	0
  1274  000CF4  6E11               	movwf	teclado_getc@valor^0,c
  1275  000CF6                     
  1276                           ;teclado.c: 28: for(i=0;i<4;i++){
  1277  000CF6  0E00               	movlw	0
  1278  000CF8  6E13               	movwf	(teclado_getc@i+1)^0,c
  1279  000CFA  0E00               	movlw	0
  1280  000CFC  6E12               	movwf	teclado_getc@i^0,c
  1281  000CFE                     l1416:
  1282                           
  1283                           ;teclado.c: 30:    if(i==0){
  1284  000CFE  5012               	movf	teclado_getc@i^0,w,c
  1285  000D00  1013               	iorwf	(teclado_getc@i+1)^0,w,c
  1286  000D02  A4D8               	btfss	status,2,c
  1287  000D04  EF86  F006         	goto	u651
  1288  000D08  EF88  F006         	goto	u650
  1289  000D0C                     u651:
  1290  000D0C  EFBA  F006         	goto	l1422
  1291  000D10                     u650:
  1292  000D10                     
  1293                           ;teclado.c: 32:       LATB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  1294  000D10  0EFE               	movlw	254
  1295  000D12  6E8A               	movwf	138,c	;volatile
  1296  000D14                     
  1297                           ;teclado.c: 33:       _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  1298  000D14  0EA6               	movlw	166
  1299  000D16                     u1177:
  1300  000D16  2EE8               	decfsz	wreg,f,c
  1301  000D18  D7FE               	bra	u1177
  1302  000D1A  D000               	nop2	
  1303                           
  1304                           ;teclado.c: 34:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  1305  000D1C  EF92  F006         	goto	l152
  1306  000D20                     l153:
  1307  000D20  C001  F011         	movff	teclado_getc@letras,teclado_getc@valor
  1308  000D24                     l152:
  1309  000D24  A881               	btfss	129,4,c	;volatile
  1310  000D26  EF97  F006         	goto	u661
  1311  000D2A  EF99  F006         	goto	u660
  1312  000D2E                     u661:
  1313  000D2E  EF90  F006         	goto	l153
  1314  000D32                     u660:
  1315  000D32  EF9D  F006         	goto	l155
  1316  000D36                     l156:
  1317  000D36  C002  F011         	movff	teclado_getc@letras+1,teclado_getc@valor
  1318  000D3A                     l155:
  1319  000D3A  AA81               	btfss	129,5,c	;volatile
  1320  000D3C  EFA2  F006         	goto	u671
  1321  000D40  EFA4  F006         	goto	u670
  1322  000D44                     u671:
  1323  000D44  EF9B  F006         	goto	l156
  1324  000D48                     u670:
  1325  000D48  EFA8  F006         	goto	l158
  1326  000D4C                     l159:
  1327  000D4C  C003  F011         	movff	teclado_getc@letras+2,teclado_getc@valor
  1328  000D50                     l158:
  1329  000D50  AC81               	btfss	129,6,c	;volatile
  1330  000D52  EFAD  F006         	goto	u681
  1331  000D56  EFAF  F006         	goto	u680
  1332  000D5A                     u681:
  1333  000D5A  EFA6  F006         	goto	l159
  1334  000D5E                     u680:
  1335  000D5E  EFB3  F006         	goto	l161
  1336  000D62                     l162:
  1337  000D62  C004  F011         	movff	teclado_getc@letras+3,teclado_getc@valor
  1338  000D66                     l161:
  1339  000D66  AE81               	btfss	129,7,c	;volatile
  1340  000D68  EFB8  F006         	goto	u691
  1341  000D6C  EFBA  F006         	goto	u690
  1342  000D70                     u691:
  1343  000D70  EFB1  F006         	goto	l162
  1344  000D74                     u690:
  1345  000D74                     l1422:
  1346                           
  1347                           ;teclado.c: 40:    if(i==1){
  1348  000D74  0412               	decf	teclado_getc@i^0,w,c
  1349  000D76  1013               	iorwf	(teclado_getc@i+1)^0,w,c
  1350  000D78  A4D8               	btfss	status,2,c
  1351  000D7A  EFC1  F006         	goto	u701
  1352  000D7E  EFC3  F006         	goto	u700
  1353  000D82                     u701:
  1354  000D82  EFF5  F006         	goto	l1428
  1355  000D86                     u700:
  1356  000D86                     
  1357                           ;teclado.c: 41:       LATB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  1358  000D86  0EFD               	movlw	253
  1359  000D88  6E8A               	movwf	138,c	;volatile
  1360  000D8A                     
  1361                           ;teclado.c: 42:       _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  1362  000D8A  0EA6               	movlw	166
  1363  000D8C                     u1187:
  1364  000D8C  2EE8               	decfsz	wreg,f,c
  1365  000D8E  D7FE               	bra	u1187
  1366  000D90  D000               	nop2	
  1367                           
  1368                           ;teclado.c: 43:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  1369  000D92  EFCD  F006         	goto	l165
  1370  000D96                     l166:
  1371  000D96  C005  F011         	movff	teclado_getc@letras+4,teclado_getc@valor
  1372  000D9A                     l165:
  1373  000D9A  A881               	btfss	129,4,c	;volatile
  1374  000D9C  EFD2  F006         	goto	u711
  1375  000DA0  EFD4  F006         	goto	u710
  1376  000DA4                     u711:
  1377  000DA4  EFCB  F006         	goto	l166
  1378  000DA8                     u710:
  1379  000DA8  EFD8  F006         	goto	l168
  1380  000DAC                     l169:
  1381  000DAC  C006  F011         	movff	teclado_getc@letras+5,teclado_getc@valor
  1382  000DB0                     l168:
  1383  000DB0  AA81               	btfss	129,5,c	;volatile
  1384  000DB2  EFDD  F006         	goto	u721
  1385  000DB6  EFDF  F006         	goto	u720
  1386  000DBA                     u721:
  1387  000DBA  EFD6  F006         	goto	l169
  1388  000DBE                     u720:
  1389  000DBE  EFE3  F006         	goto	l171
  1390  000DC2                     l172:
  1391  000DC2  C007  F011         	movff	teclado_getc@letras+6,teclado_getc@valor
  1392  000DC6                     l171:
  1393  000DC6  AC81               	btfss	129,6,c	;volatile
  1394  000DC8  EFE8  F006         	goto	u731
  1395  000DCC  EFEA  F006         	goto	u730
  1396  000DD0                     u731:
  1397  000DD0  EFE1  F006         	goto	l172
  1398  000DD4                     u730:
  1399  000DD4  EFEE  F006         	goto	l174
  1400  000DD8                     l175:
  1401  000DD8  C008  F011         	movff	teclado_getc@letras+7,teclado_getc@valor
  1402  000DDC                     l174:
  1403  000DDC  AE81               	btfss	129,7,c	;volatile
  1404  000DDE  EFF3  F006         	goto	u741
  1405  000DE2  EFF5  F006         	goto	u740
  1406  000DE6                     u741:
  1407  000DE6  EFEC  F006         	goto	l175
  1408  000DEA                     u740:
  1409  000DEA                     l1428:
  1410                           
  1411                           ;teclado.c: 49:    if(i==2){
  1412  000DEA  0E02               	movlw	2
  1413  000DEC  1812               	xorwf	teclado_getc@i^0,w,c
  1414  000DEE  1013               	iorwf	(teclado_getc@i+1)^0,w,c
  1415  000DF0  A4D8               	btfss	status,2,c
  1416  000DF2  EFFD  F006         	goto	u751
  1417  000DF6  EFFF  F006         	goto	u750
  1418  000DFA                     u751:
  1419  000DFA  EF31  F007         	goto	l1434
  1420  000DFE                     u750:
  1421  000DFE                     
  1422                           ;teclado.c: 50:       LATB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  1423  000DFE  0EFB               	movlw	251
  1424  000E00  6E8A               	movwf	138,c	;volatile
  1425  000E02                     
  1426                           ;teclado.c: 51:       _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  1427  000E02  0EA6               	movlw	166
  1428  000E04                     u1197:
  1429  000E04  2EE8               	decfsz	wreg,f,c
  1430  000E06  D7FE               	bra	u1197
  1431  000E08  D000               	nop2	
  1432                           
  1433                           ;teclado.c: 52:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  1434  000E0A  EF09  F007         	goto	l178
  1435  000E0E                     l179:
  1436  000E0E  C009  F011         	movff	teclado_getc@letras+8,teclado_getc@valor
  1437  000E12                     l178:
  1438  000E12  A881               	btfss	129,4,c	;volatile
  1439  000E14  EF0E  F007         	goto	u761
  1440  000E18  EF10  F007         	goto	u760
  1441  000E1C                     u761:
  1442  000E1C  EF07  F007         	goto	l179
  1443  000E20                     u760:
  1444  000E20  EF14  F007         	goto	l181
  1445  000E24                     l182:
  1446  000E24  C00A  F011         	movff	teclado_getc@letras+9,teclado_getc@valor
  1447  000E28                     l181:
  1448  000E28  AA81               	btfss	129,5,c	;volatile
  1449  000E2A  EF19  F007         	goto	u771
  1450  000E2E  EF1B  F007         	goto	u770
  1451  000E32                     u771:
  1452  000E32  EF12  F007         	goto	l182
  1453  000E36                     u770:
  1454  000E36  EF1F  F007         	goto	l184
  1455  000E3A                     l185:
  1456  000E3A  C00B  F011         	movff	teclado_getc@letras+10,teclado_getc@valor
  1457  000E3E                     l184:
  1458  000E3E  AC81               	btfss	129,6,c	;volatile
  1459  000E40  EF24  F007         	goto	u781
  1460  000E44  EF26  F007         	goto	u780
  1461  000E48                     u781:
  1462  000E48  EF1D  F007         	goto	l185
  1463  000E4C                     u780:
  1464  000E4C  EF2A  F007         	goto	l187
  1465  000E50                     l188:
  1466  000E50  C00C  F011         	movff	teclado_getc@letras+11,teclado_getc@valor
  1467  000E54                     l187:
  1468  000E54  AE81               	btfss	129,7,c	;volatile
  1469  000E56  EF2F  F007         	goto	u791
  1470  000E5A  EF31  F007         	goto	u790
  1471  000E5E                     u791:
  1472  000E5E  EF28  F007         	goto	l188
  1473  000E62                     u790:
  1474  000E62                     l1434:
  1475                           
  1476                           ;teclado.c: 58:    if(i==3){
  1477  000E62  0E03               	movlw	3
  1478  000E64  1812               	xorwf	teclado_getc@i^0,w,c
  1479  000E66  1013               	iorwf	(teclado_getc@i+1)^0,w,c
  1480  000E68  A4D8               	btfss	status,2,c
  1481  000E6A  EF39  F007         	goto	u801
  1482  000E6E  EF3B  F007         	goto	u800
  1483  000E72                     u801:
  1484  000E72  EF6D  F007         	goto	l1440
  1485  000E76                     u800:
  1486  000E76                     
  1487                           ;teclado.c: 59:       LATB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  1488  000E76  0EF7               	movlw	247
  1489  000E78  6E8A               	movwf	138,c	;volatile
  1490  000E7A                     
  1491                           ;teclado.c: 60:       _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  1492  000E7A  0EA6               	movlw	166
  1493  000E7C                     u1207:
  1494  000E7C  2EE8               	decfsz	wreg,f,c
  1495  000E7E  D7FE               	bra	u1207
  1496  000E80  D000               	nop2	
  1497                           
  1498                           ;teclado.c: 61:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  1499  000E82  EF45  F007         	goto	l191
  1500  000E86                     l192:
  1501  000E86  C00D  F011         	movff	teclado_getc@letras+12,teclado_getc@valor
  1502  000E8A                     l191:
  1503  000E8A  A881               	btfss	129,4,c	;volatile
  1504  000E8C  EF4A  F007         	goto	u811
  1505  000E90  EF4C  F007         	goto	u810
  1506  000E94                     u811:
  1507  000E94  EF43  F007         	goto	l192
  1508  000E98                     u810:
  1509  000E98  EF50  F007         	goto	l194
  1510  000E9C                     l195:
  1511  000E9C  C00E  F011         	movff	teclado_getc@letras+13,teclado_getc@valor
  1512  000EA0                     l194:
  1513  000EA0  AA81               	btfss	129,5,c	;volatile
  1514  000EA2  EF55  F007         	goto	u821
  1515  000EA6  EF57  F007         	goto	u820
  1516  000EAA                     u821:
  1517  000EAA  EF4E  F007         	goto	l195
  1518  000EAE                     u820:
  1519  000EAE  EF5B  F007         	goto	l197
  1520  000EB2                     l198:
  1521  000EB2  C00F  F011         	movff	teclado_getc@letras+14,teclado_getc@valor
  1522  000EB6                     l197:
  1523  000EB6  AC81               	btfss	129,6,c	;volatile
  1524  000EB8  EF60  F007         	goto	u831
  1525  000EBC  EF62  F007         	goto	u830
  1526  000EC0                     u831:
  1527  000EC0  EF59  F007         	goto	l198
  1528  000EC4                     u830:
  1529  000EC4  EF66  F007         	goto	l200
  1530  000EC8                     l201:
  1531  000EC8  C010  F011         	movff	teclado_getc@letras+15,teclado_getc@valor
  1532  000ECC                     l200:
  1533  000ECC  AE81               	btfss	129,7,c	;volatile
  1534  000ECE  EF6B  F007         	goto	u841
  1535  000ED2  EF6D  F007         	goto	u840
  1536  000ED6                     u841:
  1537  000ED6  EF64  F007         	goto	l201
  1538  000EDA                     u840:
  1539  000EDA                     l1440:
  1540                           
  1541                           ;teclado.c: 66:    }
  1542  000EDA  4A12               	infsnz	teclado_getc@i^0,f,c
  1543  000EDC  2A13               	incf	(teclado_getc@i+1)^0,f,c
  1544  000EDE  BE13               	btfsc	(teclado_getc@i+1)^0,7,c
  1545  000EE0  EF7B  F007         	goto	u851
  1546  000EE4  5013               	movf	(teclado_getc@i+1)^0,w,c
  1547  000EE6  E109               	bnz	u850
  1548  000EE8  0E04               	movlw	4
  1549  000EEA  5C12               	subwf	teclado_getc@i^0,w,c
  1550  000EEC  A0D8               	btfss	status,0,c
  1551  000EEE  EF7B  F007         	goto	u851
  1552  000EF2  EF7D  F007         	goto	u850
  1553  000EF6                     u851:
  1554  000EF6  EF7F  F006         	goto	l1416
  1555  000EFA                     u850:
  1556  000EFA                     
  1557                           ;teclado.c: 68:    return valor;
  1558  000EFA  5011               	movf	teclado_getc@valor^0,w,c
  1559  000EFC  0012               	return		;funcret
  1560  000EFE                     __end_of_teclado_getc:
  1561                           	callstack 0
  1562                           
  1563 ;; *************** function _eeprom_writex *****************
  1564 ;; Defined at:
  1565 ;;		line 11 in file "eeprom.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  address         2    0[COMRAM] int 
  1568 ;;  data            1    2[COMRAM] unsigned char 
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;		None
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1580 ;;      Params:         3       0       0       0       0       0       0       0       0
  1581 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1582 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1583 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1584 ;;Total ram usage:        3 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; This function calls:
  1587 ;;		Nothing
  1588 ;; This function is called by:
  1589 ;;		_main
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	text3
  1594  001250                     __ptext3:
  1595                           	callstack 0
  1596  001250                     _eeprom_writex:
  1597                           	callstack 30
  1598  001250                     
  1599                           ;eeprom.c: 11: void eeprom_writex(int address, char data);eeprom.c: 12: {;eeprom.c: 13: 
      +                              EEADR = address;
  1600  001250  C001  FFA9         	movff	eeprom_writex@address,4009	;volatile
  1601                           
  1602                           ;eeprom.c: 14:     EEDATA = data;
  1603  001254  C003  FFA8         	movff	eeprom_writex@data,4008	;volatile
  1604                           
  1605                           ;eeprom.c: 15:     EECON1bits.EEPGD = 0;
  1606  001258  9EA6               	bcf	166,7,c	;volsfr
  1607                           
  1608                           ;eeprom.c: 16:     EECON1bits.CFGS = 0;
  1609  00125A  9CA6               	bcf	166,6,c	;volsfr
  1610                           
  1611                           ;eeprom.c: 17:     EECON1bits.WREN = 1;
  1612  00125C  84A6               	bsf	166,2,c	;volsfr
  1613                           
  1614                           ;eeprom.c: 18:     INTCONbits.GIE = 0;
  1615  00125E  9EF2               	bcf	242,7,c	;volatile
  1616  001260                     
  1617                           ;eeprom.c: 22:     EECON2 = 0x55;
  1618  001260  0E55               	movlw	85
  1619  001262  6EA7               	movwf	167,c	;volsfr
  1620                           
  1621                           ;eeprom.c: 23:     EECON2 = 0xaa;
  1622  001264  0EAA               	movlw	170
  1623  001266  6EA7               	movwf	167,c	;volsfr
  1624  001268                     
  1625                           ;eeprom.c: 24:     EECON1bits.WR = 1;
  1626  001268  82A6               	bsf	166,1,c	;volsfr
  1627  00126A                     
  1628                           ;eeprom.c: 26:     INTCONbits.GIE = 1;
  1629  00126A  8EF2               	bsf	242,7,c	;volatile
  1630  00126C                     l216:
  1631  00126C  B2A6               	btfsc	166,1,c	;volsfr
  1632  00126E  EF3B  F009         	goto	u621
  1633  001272  EF3D  F009         	goto	u620
  1634  001276                     u621:
  1635  001276  EF36  F009         	goto	l216
  1636  00127A                     u620:
  1637  00127A  0012               	return		;funcret
  1638  00127C                     __end_of_eeprom_writex:
  1639                           	callstack 0
  1640                           
  1641 ;; *************** function _eeprom_readx *****************
  1642 ;; Defined at:
  1643 ;;		line 30 in file "eeprom.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  address         2    0[COMRAM] int 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;		None
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      unsigned char 
  1650 ;; Registers used:
  1651 ;;		wreg, status,2
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1657 ;;      Params:         2       0       0       0       0       0       0       0       0
  1658 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1660 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1661 ;;Total ram usage:        2 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_main
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text4
  1671  00129C                     __ptext4:
  1672                           	callstack 0
  1673  00129C                     _eeprom_readx:
  1674                           	callstack 30
  1675  00129C                     
  1676                           ;eeprom.c: 30: char eeprom_readx(int address);eeprom.c: 31: {;eeprom.c: 32:     EEADR = 
      +                          address;
  1677  00129C  C001  FFA9         	movff	eeprom_readx@address,4009	;volatile
  1678                           
  1679                           ;eeprom.c: 33:     EECON1bits.EEPGD = 0;
  1680  0012A0  9EA6               	bcf	166,7,c	;volsfr
  1681                           
  1682                           ;eeprom.c: 34:     EECON1bits.CFGS = 0;
  1683  0012A2  9CA6               	bcf	166,6,c	;volsfr
  1684                           
  1685                           ;eeprom.c: 35:     EECON1bits.RD = 1;
  1686  0012A4  80A6               	bsf	166,0,c	;volsfr
  1687  0012A6                     
  1688                           ;eeprom.c: 36:     return(EEDATA);
  1689  0012A6  50A8               	movf	168,w,c	;volatile
  1690  0012A8  0012               	return		;funcret
  1691  0012AA                     __end_of_eeprom_readx:
  1692                           	callstack 0
  1693                           
  1694 ;; *************** function _LCD_puts *****************
  1695 ;; Defined at:
  1696 ;;		line 164 in file "lcd.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  data            2    1[COMRAM] PTR unsigned char 
  1699 ;;		 -> STR_8(15), STR_7(12), STR_6(17), STR_5(15), 
  1700 ;;		 -> STR_4(17), STR_3(2), STR_2(15), STR_1(15), 
  1701 ;;  nBytes          1    3[COMRAM] unsigned char 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  i               1    6[COMRAM] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1713 ;;      Params:         3       0       0       0       0       0       0       0       0
  1714 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1715 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1716 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1717 ;;Total ram usage:        6 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    1
  1720 ;; This function calls:
  1721 ;;		_LCD_putc
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text5
  1728  001212                     __ptext5:
  1729                           	callstack 0
  1730  001212                     _LCD_puts:
  1731                           	callstack 29
  1732  001212                     
  1733                           ;lcd.c: 165:  register unsigned char i=0;
  1734  001212  0E00               	movlw	0
  1735  001214  6E07               	movwf	LCD_puts@i^0,c
  1736                           
  1737                           ;lcd.c: 167:  for(i=0; i<nBytes; i++){
  1738  001216  0E00               	movlw	0
  1739  001218  6E07               	movwf	LCD_puts@i^0,c
  1740  00121A  EF1E  F009         	goto	l1402
  1741  00121E                     l1398:
  1742                           
  1743                           ;lcd.c: 168:   LCD_putc(data[i]);
  1744  00121E  5007               	movf	LCD_puts@i^0,w,c
  1745  001220  2402               	addwf	LCD_puts@data^0,w,c
  1746  001222  6E05               	movwf	??_LCD_puts^0,c
  1747  001224  0E00               	movlw	0
  1748  001226  2003               	addwfc	(LCD_puts@data+1)^0,w,c
  1749  001228  6E06               	movwf	(??_LCD_puts+1)^0,c
  1750  00122A  C005  FFF6         	movff	??_LCD_puts,tblptrl
  1751  00122E  C006  FFF7         	movff	??_LCD_puts+1,tblptrh
  1752  001232                     	if	0	;tblptru may be non-zero
  1753  001232                     	endif
  1754  001232                     	if	0	;tblptru may be non-zero
  1755  001232                     	endif
  1756  001232  0008               	tblrd		*
  1757  001234  50F5               	movf	tablat,w,c
  1758  001236  ECEE  F007         	call	_LCD_putc
  1759  00123A                     
  1760                           ;lcd.c: 169:  }
  1761  00123A  2A07               	incf	LCD_puts@i^0,f,c
  1762  00123C                     l1402:
  1763  00123C  5004               	movf	LCD_puts@nBytes^0,w,c
  1764  00123E  5C07               	subwf	LCD_puts@i^0,w,c
  1765  001240  A0D8               	btfss	status,0,c
  1766  001242  EF25  F009         	goto	u631
  1767  001246  EF27  F009         	goto	u630
  1768  00124A                     u631:
  1769  00124A  EF0F  F009         	goto	l1398
  1770  00124E                     u630:
  1771  00124E  0012               	return		;funcret
  1772  001250                     __end_of_LCD_puts:
  1773                           	callstack 0
  1774                           
  1775 ;; *************** function _LCD_putc *****************
  1776 ;; Defined at:
  1777 ;;		line 11 in file "lcd.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  ch              1    wreg     unsigned char 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  ch              1    0[COMRAM] unsigned char 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1791 ;;      Params:         0       0       0       0       0       0       0       0       0
  1792 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1794 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1795 ;;Total ram usage:        1 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_LCD_puts
  1801 ;;		_LCD_definechar
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text6
  1806  000FDC                     __ptext6:
  1807                           	callstack 0
  1808  000FDC                     _LCD_putc:
  1809                           	callstack 29
  1810                           
  1811                           ;incstack = 0
  1812                           ;LCD_putc@ch stored from wreg
  1813  000FDC  6E01               	movwf	LCD_putc@ch^0,c
  1814  000FDE                     
  1815                           ;lcd.c: 13:     LATDbits.LATD0 = 1;
  1816  000FDE  808C               	bsf	140,0,c	;volatile
  1817  000FE0                     
  1818                           ;lcd.c: 15:     if ( ch & 0x10 ) {
  1819  000FE0  A801               	btfss	LCD_putc@ch^0,4,c
  1820  000FE2  EFF5  F007         	goto	u91
  1821  000FE6  EFF7  F007         	goto	u90
  1822  000FEA                     u91:
  1823  000FEA  EFFA  F007         	goto	l69
  1824  000FEE                     u90:
  1825  000FEE                     
  1826                           ;lcd.c: 16:         LATDbits.LATD4 = 1;
  1827  000FEE  888C               	bsf	140,4,c	;volatile
  1828                           
  1829                           ;lcd.c: 17:  } else {
  1830  000FF0  EFFB  F007         	goto	l948
  1831  000FF4                     l69:
  1832                           
  1833                           ;lcd.c: 18:         LATDbits.LATD4 = 0;
  1834  000FF4  988C               	bcf	140,4,c	;volatile
  1835  000FF6                     l948:
  1836                           
  1837                           ;lcd.c: 20:  if ( ch & 0x20 ) {
  1838  000FF6  AA01               	btfss	LCD_putc@ch^0,5,c
  1839  000FF8  EF00  F008         	goto	u101
  1840  000FFC  EF02  F008         	goto	u100
  1841  001000                     u101:
  1842  001000  EF05  F008         	goto	l71
  1843  001004                     u100:
  1844  001004                     
  1845                           ;lcd.c: 21:         LATDbits.LATD5 = 1;
  1846  001004  8A8C               	bsf	140,5,c	;volatile
  1847                           
  1848                           ;lcd.c: 22:  } else {
  1849  001006  EF06  F008         	goto	l952
  1850  00100A                     l71:
  1851                           
  1852                           ;lcd.c: 23:         LATDbits.LATD5 = 0;
  1853  00100A  9A8C               	bcf	140,5,c	;volatile
  1854  00100C                     l952:
  1855                           
  1856                           ;lcd.c: 25:  if ( ch & 0x40 ) {
  1857  00100C  AC01               	btfss	LCD_putc@ch^0,6,c
  1858  00100E  EF0B  F008         	goto	u111
  1859  001012  EF0D  F008         	goto	u110
  1860  001016                     u111:
  1861  001016  EF10  F008         	goto	l73
  1862  00101A                     u110:
  1863  00101A                     
  1864                           ;lcd.c: 26:         LATDbits.LATD6 = 1;
  1865  00101A  8C8C               	bsf	140,6,c	;volatile
  1866                           
  1867                           ;lcd.c: 27:  } else {
  1868  00101C  EF11  F008         	goto	l956
  1869  001020                     l73:
  1870                           
  1871                           ;lcd.c: 28:         LATDbits.LATD6 = 0;
  1872  001020  9C8C               	bcf	140,6,c	;volatile
  1873  001022                     l956:
  1874                           
  1875                           ;lcd.c: 30:  if ( ch & 0x80 ) {
  1876  001022  AE01               	btfss	LCD_putc@ch^0,7,c
  1877  001024  EF16  F008         	goto	u121
  1878  001028  EF18  F008         	goto	u120
  1879  00102C                     u121:
  1880  00102C  EF1B  F008         	goto	l75
  1881  001030                     u120:
  1882  001030                     
  1883                           ;lcd.c: 31:         LATDbits.LATD7 = 1;
  1884  001030  8E8C               	bsf	140,7,c	;volatile
  1885                           
  1886                           ;lcd.c: 32:  } else {
  1887  001032  EF1C  F008         	goto	l76
  1888  001036                     l75:
  1889                           
  1890                           ;lcd.c: 33:         LATDbits.LATD7 = 0;
  1891  001036  9E8C               	bcf	140,7,c	;volatile
  1892  001038                     l76:
  1893                           
  1894                           ;lcd.c: 36:     LATDbits.LATD2 = 1;
  1895  001038  848C               	bsf	140,2,c	;volatile
  1896  00103A                     
  1897                           ;lcd.c: 37:     _delay((unsigned long)((300)*(4000000/4000000.0)));
  1898  00103A  0E64               	movlw	100
  1899  00103C                     u1217:
  1900  00103C  2EE8               	decfsz	wreg,f,c
  1901  00103E  D7FE               	bra	u1217
  1902  001040                     
  1903                           ;lcd.c: 38:     LATDbits.LATD2 = 0;
  1904  001040  948C               	bcf	140,2,c	;volatile
  1905                           
  1906                           ;lcd.c: 39:     _delay((unsigned long)((300)*(4000000/4000000.0)));
  1907  001042  0E64               	movlw	100
  1908  001044                     u1227:
  1909  001044  2EE8               	decfsz	wreg,f,c
  1910  001046  D7FE               	bra	u1227
  1911  001048                     
  1912                           ;lcd.c: 41:     if ( ch & 0x01 ) {
  1913  001048  A001               	btfss	LCD_putc@ch^0,0,c
  1914  00104A  EF29  F008         	goto	u131
  1915  00104E  EF2B  F008         	goto	u130
  1916  001052                     u131:
  1917  001052  EF2E  F008         	goto	l77
  1918  001056                     u130:
  1919  001056                     
  1920                           ;lcd.c: 42:         LATDbits.LATD4 = 1;
  1921  001056  888C               	bsf	140,4,c	;volatile
  1922                           
  1923                           ;lcd.c: 43:  } else {
  1924  001058  EF2F  F008         	goto	l968
  1925  00105C                     l77:
  1926                           
  1927                           ;lcd.c: 44:         LATDbits.LATD4 = 0;
  1928  00105C  988C               	bcf	140,4,c	;volatile
  1929  00105E                     l968:
  1930                           
  1931                           ;lcd.c: 46:  if ( ch & 0x02 ) {
  1932  00105E  A201               	btfss	LCD_putc@ch^0,1,c
  1933  001060  EF34  F008         	goto	u141
  1934  001064  EF36  F008         	goto	u140
  1935  001068                     u141:
  1936  001068  EF39  F008         	goto	l79
  1937  00106C                     u140:
  1938  00106C                     
  1939                           ;lcd.c: 47:         LATDbits.LATD5 = 1;
  1940  00106C  8A8C               	bsf	140,5,c	;volatile
  1941                           
  1942                           ;lcd.c: 48:  } else {
  1943  00106E  EF3A  F008         	goto	l972
  1944  001072                     l79:
  1945                           
  1946                           ;lcd.c: 49:         LATDbits.LATD5 = 0;
  1947  001072  9A8C               	bcf	140,5,c	;volatile
  1948  001074                     l972:
  1949                           
  1950                           ;lcd.c: 51:  if ( ch & 0x04 ) {
  1951  001074  A401               	btfss	LCD_putc@ch^0,2,c
  1952  001076  EF3F  F008         	goto	u151
  1953  00107A  EF41  F008         	goto	u150
  1954  00107E                     u151:
  1955  00107E  EF44  F008         	goto	l81
  1956  001082                     u150:
  1957  001082                     
  1958                           ;lcd.c: 52:         LATDbits.LATD6 = 1;
  1959  001082  8C8C               	bsf	140,6,c	;volatile
  1960                           
  1961                           ;lcd.c: 53:  } else {
  1962  001084  EF45  F008         	goto	l976
  1963  001088                     l81:
  1964                           
  1965                           ;lcd.c: 54:         LATDbits.LATD6 = 0;
  1966  001088  9C8C               	bcf	140,6,c	;volatile
  1967  00108A                     l976:
  1968                           
  1969                           ;lcd.c: 56:  if ( ch & 0x08 ) {
  1970  00108A  A601               	btfss	LCD_putc@ch^0,3,c
  1971  00108C  EF4A  F008         	goto	u161
  1972  001090  EF4C  F008         	goto	u160
  1973  001094                     u161:
  1974  001094  EF4F  F008         	goto	l83
  1975  001098                     u160:
  1976  001098                     
  1977                           ;lcd.c: 57:         LATDbits.LATD7 = 1;
  1978  001098  8E8C               	bsf	140,7,c	;volatile
  1979                           
  1980                           ;lcd.c: 58:  } else {
  1981  00109A  EF50  F008         	goto	l84
  1982  00109E                     l83:
  1983                           
  1984                           ;lcd.c: 59:         LATDbits.LATD7 = 0;
  1985  00109E  9E8C               	bcf	140,7,c	;volatile
  1986  0010A0                     l84:
  1987                           
  1988                           ;lcd.c: 62:     LATDbits.LATD2 = 1;
  1989  0010A0  848C               	bsf	140,2,c	;volatile
  1990  0010A2                     
  1991                           ;lcd.c: 63:     _delay((unsigned long)((300)*(4000000/4000000.0)));
  1992  0010A2  0E64               	movlw	100
  1993  0010A4                     u1237:
  1994  0010A4  2EE8               	decfsz	wreg,f,c
  1995  0010A6  D7FE               	bra	u1237
  1996  0010A8                     
  1997                           ;lcd.c: 64:     LATDbits.LATD2 = 0;
  1998  0010A8  948C               	bcf	140,2,c	;volatile
  1999                           
  2000                           ;lcd.c: 65:     _delay((unsigned long)((300)*(4000000/4000000.0)));
  2001  0010AA  0E64               	movlw	100
  2002  0010AC                     u1247:
  2003  0010AC  2EE8               	decfsz	wreg,f,c
  2004  0010AE  D7FE               	bra	u1247
  2005  0010B0  0012               	return		;funcret
  2006  0010B2                     __end_of_LCD_putc:
  2007                           	callstack 0
  2008                           
  2009 ;; *************** function _LCD_init *****************
  2010 ;; Defined at:
  2011 ;;		line 124 in file "lcd.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2025 ;;      Params:         0       0       0       0       0       0       0       0       0
  2026 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2027 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2028 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2029 ;;Total ram usage:        1 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    2
  2032 ;; This function calls:
  2033 ;;		_LCD_clear
  2034 ;;		_LCD_command
  2035 ;; This function is called by:
  2036 ;;		_main
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text7
  2041  0010B2                     __ptext7:
  2042                           	callstack 0
  2043  0010B2                     _LCD_init:
  2044                           	callstack 28
  2045  0010B2                     
  2046                           ;lcd.c: 127:     _delay((unsigned long)((15)*(4000000/4000.0)));
  2047  0010B2  0E14               	movlw	20
  2048  0010B4  6E02               	movwf	??_LCD_init^0,c
  2049  0010B6  0E7A               	movlw	122
  2050  0010B8                     u1257:
  2051  0010B8  2EE8               	decfsz	wreg,f,c
  2052  0010BA  D7FE               	bra	u1257
  2053  0010BC  2E02               	decfsz	??_LCD_init^0,f,c
  2054  0010BE  D7FC               	bra	u1257
  2055  0010C0                     
  2056                           ;lcd.c: 128:     TRISDbits.TRISD0 = 0;
  2057  0010C0  9095               	bcf	149,0,c	;volatile
  2058  0010C2                     
  2059                           ;lcd.c: 129:     TRISDbits.TRISD1 = 0;
  2060  0010C2  9295               	bcf	149,1,c	;volatile
  2061  0010C4                     
  2062                           ;lcd.c: 130:     TRISDbits.TRISD2 = 0;
  2063  0010C4  9495               	bcf	149,2,c	;volatile
  2064  0010C6                     
  2065                           ;lcd.c: 131:     TRISDbits.TRISD4 = 0;
  2066  0010C6  9895               	bcf	149,4,c	;volatile
  2067  0010C8                     
  2068                           ;lcd.c: 132:     TRISDbits.TRISD5 = 0;
  2069  0010C8  9A95               	bcf	149,5,c	;volatile
  2070  0010CA                     
  2071                           ;lcd.c: 133:     TRISDbits.TRISD6 = 0;
  2072  0010CA  9C95               	bcf	149,6,c	;volatile
  2073  0010CC                     
  2074                           ;lcd.c: 134:     TRISDbits.TRISD7 = 0;
  2075  0010CC  9E95               	bcf	149,7,c	;volatile
  2076  0010CE                     
  2077                           ;lcd.c: 136:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 0; LATDbits.LA
      +                          TD4 = 0;
  2078  0010CE  9E8C               	bcf	140,7,c	;volatile
  2079  0010D0  9C8C               	bcf	140,6,c	;volatile
  2080  0010D2  9A8C               	bcf	140,5,c	;volatile
  2081  0010D4  988C               	bcf	140,4,c	;volatile
  2082  0010D6                     
  2083                           ;lcd.c: 137:     LATDbits.LATD2 = 0; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0;
  2084  0010D6  948C               	bcf	140,2,c	;volatile
  2085  0010D8  928C               	bcf	140,1,c	;volatile
  2086  0010DA  908C               	bcf	140,0,c	;volatile
  2087  0010DC                     
  2088                           ;lcd.c: 139:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
  2089  0010DC  9E8C               	bcf	140,7,c	;volatile
  2090  0010DE  9C8C               	bcf	140,6,c	;volatile
  2091  0010E0  8A8C               	bsf	140,5,c	;volatile
  2092  0010E2  888C               	bsf	140,4,c	;volatile
  2093  0010E4                     
  2094                           ;lcd.c: 140:     LATDbits.LATD2 = 1; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0;
  2095  0010E4  848C               	bsf	140,2,c	;volatile
  2096  0010E6  928C               	bcf	140,1,c	;volatile
  2097  0010E8  908C               	bcf	140,0,c	;volatile
  2098                           
  2099                           ;lcd.c: 141:  _delay((unsigned long)((1)*(4000000/4000.0)));
  2100  0010EA  0EC8               	movlw	200
  2101  0010EC                     u1267:
  2102  0010EC  D000               	nop2	
  2103  0010EE  2EE8               	decfsz	wreg,f,c
  2104  0010F0  D7FD               	bra	u1267
  2105  0010F2                     
  2106                           ;lcd.c: 142:     LATDbits.LATD2 = 0;
  2107  0010F2  948C               	bcf	140,2,c	;volatile
  2108                           
  2109                           ;lcd.c: 143:  _delay((unsigned long)((1)*(4000000/4000.0)));
  2110  0010F4  0EC8               	movlw	200
  2111  0010F6                     u1277:
  2112  0010F6  D000               	nop2	
  2113  0010F8  2EE8               	decfsz	wreg,f,c
  2114  0010FA  D7FD               	bra	u1277
  2115  0010FC                     
  2116                           ;lcd.c: 145:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
  2117  0010FC  9E8C               	bcf	140,7,c	;volatile
  2118  0010FE  9C8C               	bcf	140,6,c	;volatile
  2119  001100  8A8C               	bsf	140,5,c	;volatile
  2120  001102  888C               	bsf	140,4,c	;volatile
  2121  001104                     
  2122                           ;lcd.c: 146:     LATDbits.LATD2 = 1; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0;
  2123  001104  848C               	bsf	140,2,c	;volatile
  2124  001106  928C               	bcf	140,1,c	;volatile
  2125  001108  908C               	bcf	140,0,c	;volatile
  2126                           
  2127                           ;lcd.c: 147:  _delay((unsigned long)((1)*(4000000/4000.0)));
  2128  00110A  0EC8               	movlw	200
  2129  00110C                     u1287:
  2130  00110C  D000               	nop2	
  2131  00110E  2EE8               	decfsz	wreg,f,c
  2132  001110  D7FD               	bra	u1287
  2133  001112                     
  2134                           ;lcd.c: 148:     LATDbits.LATD2 = 0;
  2135  001112  948C               	bcf	140,2,c	;volatile
  2136                           
  2137                           ;lcd.c: 149:  _delay((unsigned long)((1)*(4000000/4000.0)));
  2138  001114  0EC8               	movlw	200
  2139  001116                     u1297:
  2140  001116  D000               	nop2	
  2141  001118  2EE8               	decfsz	wreg,f,c
  2142  00111A  D7FD               	bra	u1297
  2143  00111C                     
  2144                           ;lcd.c: 151:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 0;
  2145  00111C  9E8C               	bcf	140,7,c	;volatile
  2146  00111E  9C8C               	bcf	140,6,c	;volatile
  2147  001120  8A8C               	bsf	140,5,c	;volatile
  2148  001122  988C               	bcf	140,4,c	;volatile
  2149  001124                     
  2150                           ;lcd.c: 152:     LATDbits.LATD2 = 1; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0;
  2151  001124  848C               	bsf	140,2,c	;volatile
  2152  001126  928C               	bcf	140,1,c	;volatile
  2153  001128  908C               	bcf	140,0,c	;volatile
  2154                           
  2155                           ;lcd.c: 153:  _delay((unsigned long)((1)*(4000000/4000.0)));
  2156  00112A  0EC8               	movlw	200
  2157  00112C                     u1307:
  2158  00112C  D000               	nop2	
  2159  00112E  2EE8               	decfsz	wreg,f,c
  2160  001130  D7FD               	bra	u1307
  2161  001132                     
  2162                           ;lcd.c: 154:     LATDbits.LATD2 = 0;
  2163  001132  948C               	bcf	140,2,c	;volatile
  2164                           
  2165                           ;lcd.c: 155:  _delay((unsigned long)((1)*(4000000/4000.0)));
  2166  001134  0EC8               	movlw	200
  2167  001136                     u1317:
  2168  001136  D000               	nop2	
  2169  001138  2EE8               	decfsz	wreg,f,c
  2170  00113A  D7FD               	bra	u1317
  2171  00113C                     
  2172                           ;lcd.c: 157:  LCD_command(0b00101000);
  2173  00113C  0E28               	movlw	40
  2174  00113E  EC7F  F007         	call	_LCD_command
  2175  001142                     
  2176                           ;lcd.c: 159:  LCD_command(0b00001100);
  2177  001142  0E0C               	movlw	12
  2178  001144  EC7F  F007         	call	_LCD_command
  2179  001148                     
  2180                           ;lcd.c: 161:     LCD_clear();
  2181  001148  EC5B  F009         	call	_LCD_clear	;wreg free
  2182  00114C  0012               	return		;funcret
  2183  00114E                     __end_of_LCD_init:
  2184                           	callstack 0
  2185                           
  2186 ;; *************** function _LCD_clear *****************
  2187 ;; Defined at:
  2188 ;;		line 197 in file "lcd.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;		None
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2202 ;;      Params:         0       0       0       0       0       0       0       0       0
  2203 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2205 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2206 ;;Total ram usage:        0 bytes
  2207 ;; Hardware stack levels used:    1
  2208 ;; Hardware stack levels required when called:    1
  2209 ;; This function calls:
  2210 ;;		_LCD_command
  2211 ;; This function is called by:
  2212 ;;		_main
  2213 ;;		_LCD_init
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text8
  2218  0012B6                     __ptext8:
  2219                           	callstack 0
  2220  0012B6                     _LCD_clear:
  2221                           	callstack 28
  2222  0012B6                     
  2223                           ;lcd.c: 198:     LCD_command(0b00000001);
  2224  0012B6  0E01               	movlw	1
  2225  0012B8  EC7F  F007         	call	_LCD_command
  2226  0012BC  0012               	return		;funcret
  2227  0012BE                     __end_of_LCD_clear:
  2228                           	callstack 0
  2229                           
  2230 ;; *************** function _LCD_gotoxy *****************
  2231 ;; Defined at:
  2232 ;;		line 172 in file "lcd.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  x               1    wreg     unsigned char 
  2235 ;;  y               1    1[COMRAM] unsigned char 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  x               1    5[COMRAM] unsigned char 
  2238 ;;  DDRAMAddr       1    4[COMRAM] unsigned char 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2, status,0, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2248 ;;      Params:         1       0       0       0       0       0       0       0       0
  2249 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2250 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2251 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2252 ;;Total ram usage:        5 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:    1
  2255 ;; This function calls:
  2256 ;;		_LCD_command
  2257 ;; This function is called by:
  2258 ;;		_main
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text9
  2263  00114E                     __ptext9:
  2264                           	callstack 0
  2265  00114E                     _LCD_gotoxy:
  2266                           	callstack 29
  2267                           
  2268                           ;incstack = 0
  2269                           ;LCD_gotoxy@x stored from wreg
  2270  00114E  6E06               	movwf	LCD_gotoxy@x^0,c
  2271  001150                     
  2272                           ;lcd.c: 173:  register unsigned char DDRAMAddr;;lcd.c: 175:  switch(y){
  2273  001150  EFBD  F008         	goto	l1388
  2274  001154                     l1376:
  2275  001154  0406               	decf	LCD_gotoxy@x^0,w,c
  2276  001156  6E05               	movwf	LCD_gotoxy@DDRAMAddr^0,c
  2277  001158  EFDA  F008         	goto	l1390
  2278  00115C                     l1378:
  2279  00115C  5006               	movf	LCD_gotoxy@x^0,w,c
  2280  00115E  0F3F               	addlw	63
  2281  001160  6E05               	movwf	LCD_gotoxy@DDRAMAddr^0,c
  2282  001162  EFDA  F008         	goto	l1390
  2283  001166                     l1380:
  2284  001166  5006               	movf	LCD_gotoxy@x^0,w,c
  2285  001168  0F13               	addlw	19
  2286  00116A  6E05               	movwf	LCD_gotoxy@DDRAMAddr^0,c
  2287  00116C  EFDA  F008         	goto	l1390
  2288  001170                     l1382:
  2289  001170  5006               	movf	LCD_gotoxy@x^0,w,c
  2290  001172  0F53               	addlw	83
  2291  001174  6E05               	movwf	LCD_gotoxy@DDRAMAddr^0,c
  2292  001176  EFDA  F008         	goto	l1390
  2293  00117A                     l1388:
  2294  00117A  5002               	movf	LCD_gotoxy@y^0,w,c
  2295  00117C  6E03               	movwf	??_LCD_gotoxy^0,c
  2296  00117E  6A04               	clrf	(??_LCD_gotoxy+1)^0,c
  2297                           
  2298                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2299                           ; Switch size 1, requested type "simple"
  2300                           ; Number of cases is 1, Range of values is 0 to 0
  2301                           ; switch strategies available:
  2302                           ; Name         Instructions Cycles
  2303                           ; simple_byte            4     3 (average)
  2304                           ;	Chosen strategy is simple_byte
  2305  001180  5004               	movf	(??_LCD_gotoxy+1)^0,w,c
  2306  001182  0A00               	xorlw	0	; case 0
  2307  001184  B4D8               	btfsc	status,2,c
  2308  001186  EFC7  F008         	goto	l1630
  2309  00118A  EFAA  F008         	goto	l1376
  2310  00118E                     l1630:
  2311                           
  2312                           ; Switch size 1, requested type "simple"
  2313                           ; Number of cases is 4, Range of values is 1 to 4
  2314                           ; switch strategies available:
  2315                           ; Name         Instructions Cycles
  2316                           ; simple_byte           13     7 (average)
  2317                           ;	Chosen strategy is simple_byte
  2318  00118E  5003               	movf	??_LCD_gotoxy^0,w,c
  2319  001190  0A01               	xorlw	1	; case 1
  2320  001192  B4D8               	btfsc	status,2,c
  2321  001194  EFAA  F008         	goto	l1376
  2322  001198  0A03               	xorlw	3	; case 2
  2323  00119A  B4D8               	btfsc	status,2,c
  2324  00119C  EFAE  F008         	goto	l1378
  2325  0011A0  0A01               	xorlw	1	; case 3
  2326  0011A2  B4D8               	btfsc	status,2,c
  2327  0011A4  EFB3  F008         	goto	l1380
  2328  0011A8  0A07               	xorlw	7	; case 4
  2329  0011AA  B4D8               	btfsc	status,2,c
  2330  0011AC  EFB8  F008         	goto	l1382
  2331  0011B0  EFAA  F008         	goto	l1376
  2332  0011B4                     l1390:
  2333                           
  2334                           ;lcd.c: 182:  LCD_command(1<<7|DDRAMAddr);
  2335  0011B4  5005               	movf	LCD_gotoxy@DDRAMAddr^0,w,c
  2336  0011B6  0980               	iorlw	128
  2337  0011B8  EC7F  F007         	call	_LCD_command
  2338  0011BC  0012               	return		;funcret
  2339  0011BE                     __end_of_LCD_gotoxy:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function _LCD_command *****************
  2343 ;; Defined at:
  2344 ;;		line 67 in file "lcd.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  cmd             1    wreg     unsigned char 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  cmd             1    0[COMRAM] unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2358 ;;      Params:         0       0       0       0       0       0       0       0       0
  2359 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2361 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2362 ;;Total ram usage:        1 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_LCD_init
  2368 ;;		_LCD_gotoxy
  2369 ;;		_LCD_clear
  2370 ;;		_LCD_definechar
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text10
  2375  000EFE                     __ptext10:
  2376                           	callstack 0
  2377  000EFE                     _LCD_command:
  2378                           	callstack 29
  2379                           
  2380                           ;incstack = 0
  2381                           ;LCD_command@cmd stored from wreg
  2382  000EFE  6E01               	movwf	LCD_command@cmd^0,c
  2383  000F00                     
  2384                           ;lcd.c: 69:     LATDbits.LATD0 = 0;
  2385  000F00  908C               	bcf	140,0,c	;volatile
  2386  000F02                     
  2387                           ;lcd.c: 71:     if ( cmd & 0x10 ) {
  2388  000F02  A801               	btfss	LCD_command@cmd^0,4,c
  2389  000F04  EF86  F007         	goto	u11
  2390  000F08  EF88  F007         	goto	u10
  2391  000F0C                     u11:
  2392  000F0C  EF8B  F007         	goto	l88
  2393  000F10                     u10:
  2394  000F10                     
  2395                           ;lcd.c: 72:         LATDbits.LATD4 = 1;
  2396  000F10  888C               	bsf	140,4,c	;volatile
  2397                           
  2398                           ;lcd.c: 73:  } else {
  2399  000F12  EF8C  F007         	goto	l904
  2400  000F16                     l88:
  2401                           
  2402                           ;lcd.c: 74:         LATDbits.LATD4 = 0;
  2403  000F16  988C               	bcf	140,4,c	;volatile
  2404  000F18                     l904:
  2405                           
  2406                           ;lcd.c: 76:  if ( cmd & 0x20 ) {
  2407  000F18  AA01               	btfss	LCD_command@cmd^0,5,c
  2408  000F1A  EF91  F007         	goto	u21
  2409  000F1E  EF93  F007         	goto	u20
  2410  000F22                     u21:
  2411  000F22  EF96  F007         	goto	l90
  2412  000F26                     u20:
  2413  000F26                     
  2414                           ;lcd.c: 77:         LATDbits.LATD5 = 1;
  2415  000F26  8A8C               	bsf	140,5,c	;volatile
  2416                           
  2417                           ;lcd.c: 78:  } else {
  2418  000F28  EF97  F007         	goto	l908
  2419  000F2C                     l90:
  2420                           
  2421                           ;lcd.c: 79:         LATDbits.LATD5 = 0;
  2422  000F2C  9A8C               	bcf	140,5,c	;volatile
  2423  000F2E                     l908:
  2424                           
  2425                           ;lcd.c: 81:  if ( cmd & 0x40 ) {
  2426  000F2E  AC01               	btfss	LCD_command@cmd^0,6,c
  2427  000F30  EF9C  F007         	goto	u31
  2428  000F34  EF9E  F007         	goto	u30
  2429  000F38                     u31:
  2430  000F38  EFA1  F007         	goto	l92
  2431  000F3C                     u30:
  2432  000F3C                     
  2433                           ;lcd.c: 82:         LATDbits.LATD6 = 1;
  2434  000F3C  8C8C               	bsf	140,6,c	;volatile
  2435                           
  2436                           ;lcd.c: 83:  } else {
  2437  000F3E  EFA2  F007         	goto	l912
  2438  000F42                     l92:
  2439                           
  2440                           ;lcd.c: 84:         LATDbits.LATD6 = 0;
  2441  000F42  9C8C               	bcf	140,6,c	;volatile
  2442  000F44                     l912:
  2443                           
  2444                           ;lcd.c: 86:  if ( cmd & 0x80 ) {
  2445  000F44  AE01               	btfss	LCD_command@cmd^0,7,c
  2446  000F46  EFA7  F007         	goto	u41
  2447  000F4A  EFA9  F007         	goto	u40
  2448  000F4E                     u41:
  2449  000F4E  EFAC  F007         	goto	l94
  2450  000F52                     u40:
  2451  000F52                     
  2452                           ;lcd.c: 87:         LATDbits.LATD7 = 1;
  2453  000F52  8E8C               	bsf	140,7,c	;volatile
  2454                           
  2455                           ;lcd.c: 88:  } else {
  2456  000F54  EFAD  F007         	goto	l95
  2457  000F58                     l94:
  2458                           
  2459                           ;lcd.c: 89:         LATDbits.LATD7 = 0;
  2460  000F58  9E8C               	bcf	140,7,c	;volatile
  2461  000F5A                     l95:
  2462                           
  2463                           ;lcd.c: 92:     LATDbits.LATD2 = 1;
  2464  000F5A  848C               	bsf	140,2,c	;volatile
  2465  000F5C                     
  2466                           ;lcd.c: 93:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2467  000F5C  0EC8               	movlw	200
  2468  000F5E                     u1327:
  2469  000F5E  D000               	nop2	
  2470  000F60  2EE8               	decfsz	wreg,f,c
  2471  000F62  D7FD               	bra	u1327
  2472  000F64                     
  2473                           ;lcd.c: 94:  LATDbits.LATD2 = 0;
  2474  000F64  948C               	bcf	140,2,c	;volatile
  2475                           
  2476                           ;lcd.c: 95:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2477  000F66  0EC8               	movlw	200
  2478  000F68                     u1337:
  2479  000F68  D000               	nop2	
  2480  000F6A  2EE8               	decfsz	wreg,f,c
  2481  000F6C  D7FD               	bra	u1337
  2482  000F6E                     
  2483                           ;lcd.c: 97:     if ( cmd & 0x01 ) {
  2484  000F6E  A001               	btfss	LCD_command@cmd^0,0,c
  2485  000F70  EFBC  F007         	goto	u51
  2486  000F74  EFBE  F007         	goto	u50
  2487  000F78                     u51:
  2488  000F78  EFC1  F007         	goto	l96
  2489  000F7C                     u50:
  2490  000F7C                     
  2491                           ;lcd.c: 98:         LATDbits.LATD4 = 1;
  2492  000F7C  888C               	bsf	140,4,c	;volatile
  2493                           
  2494                           ;lcd.c: 99:  } else {
  2495  000F7E  EFC2  F007         	goto	l924
  2496  000F82                     l96:
  2497                           
  2498                           ;lcd.c: 100:         LATDbits.LATD4 = 0;
  2499  000F82  988C               	bcf	140,4,c	;volatile
  2500  000F84                     l924:
  2501                           
  2502                           ;lcd.c: 102:  if ( cmd & 0x02 ) {
  2503  000F84  A201               	btfss	LCD_command@cmd^0,1,c
  2504  000F86  EFC7  F007         	goto	u61
  2505  000F8A  EFC9  F007         	goto	u60
  2506  000F8E                     u61:
  2507  000F8E  EFCC  F007         	goto	l98
  2508  000F92                     u60:
  2509  000F92                     
  2510                           ;lcd.c: 103:         LATDbits.LATD5 = 1;
  2511  000F92  8A8C               	bsf	140,5,c	;volatile
  2512                           
  2513                           ;lcd.c: 104:  } else {
  2514  000F94  EFCD  F007         	goto	l928
  2515  000F98                     l98:
  2516                           
  2517                           ;lcd.c: 105:         LATDbits.LATD5 = 0;
  2518  000F98  9A8C               	bcf	140,5,c	;volatile
  2519  000F9A                     l928:
  2520                           
  2521                           ;lcd.c: 107:  if ( cmd & 0x04 ) {
  2522  000F9A  A401               	btfss	LCD_command@cmd^0,2,c
  2523  000F9C  EFD2  F007         	goto	u71
  2524  000FA0  EFD4  F007         	goto	u70
  2525  000FA4                     u71:
  2526  000FA4  EFD7  F007         	goto	l100
  2527  000FA8                     u70:
  2528  000FA8                     
  2529                           ;lcd.c: 108:         LATDbits.LATD6 = 1;
  2530  000FA8  8C8C               	bsf	140,6,c	;volatile
  2531                           
  2532                           ;lcd.c: 109:  } else {
  2533  000FAA  EFD8  F007         	goto	l932
  2534  000FAE                     l100:
  2535                           
  2536                           ;lcd.c: 110:         LATDbits.LATD6 = 0;
  2537  000FAE  9C8C               	bcf	140,6,c	;volatile
  2538  000FB0                     l932:
  2539                           
  2540                           ;lcd.c: 112:  if ( cmd & 0x08 ) {
  2541  000FB0  A601               	btfss	LCD_command@cmd^0,3,c
  2542  000FB2  EFDD  F007         	goto	u81
  2543  000FB6  EFDF  F007         	goto	u80
  2544  000FBA                     u81:
  2545  000FBA  EFE2  F007         	goto	l102
  2546  000FBE                     u80:
  2547  000FBE                     
  2548                           ;lcd.c: 113:         LATDbits.LATD7 = 1;
  2549  000FBE  8E8C               	bsf	140,7,c	;volatile
  2550                           
  2551                           ;lcd.c: 114:  } else {
  2552  000FC0  EFE3  F007         	goto	l103
  2553  000FC4                     l102:
  2554                           
  2555                           ;lcd.c: 115:         LATDbits.LATD7 = 0;
  2556  000FC4  9E8C               	bcf	140,7,c	;volatile
  2557  000FC6                     l103:
  2558                           
  2559                           ;lcd.c: 118:     LATDbits.LATD2 = 1;
  2560  000FC6  848C               	bsf	140,2,c	;volatile
  2561  000FC8                     
  2562                           ;lcd.c: 119:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2563  000FC8  0EC8               	movlw	200
  2564  000FCA                     u1347:
  2565  000FCA  D000               	nop2	
  2566  000FCC  2EE8               	decfsz	wreg,f,c
  2567  000FCE  D7FD               	bra	u1347
  2568  000FD0                     
  2569                           ;lcd.c: 120:     LATDbits.LATD2 = 0;
  2570  000FD0  948C               	bcf	140,2,c	;volatile
  2571                           
  2572                           ;lcd.c: 121:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2573  000FD2  0EC8               	movlw	200
  2574  000FD4                     u1357:
  2575  000FD4  D000               	nop2	
  2576  000FD6  2EE8               	decfsz	wreg,f,c
  2577  000FD8  D7FD               	bra	u1357
  2578  000FDA  0012               	return		;funcret
  2579  000FDC                     __end_of_LCD_command:
  2580                           	callstack 0
  2581                           
  2582                           	psect	rparam
  2583  0000                     
  2584                           	psect	idloc
  2585                           
  2586                           ;Config register IDLOC0 @ 0x200000
  2587                           ;	unspecified, using default values
  2588  200000                     	org	2097152
  2589  200000  FF                 	db	255
  2590                           
  2591                           ;Config register IDLOC1 @ 0x200001
  2592                           ;	unspecified, using default values
  2593  200001                     	org	2097153
  2594  200001  FF                 	db	255
  2595                           
  2596                           ;Config register IDLOC2 @ 0x200002
  2597                           ;	unspecified, using default values
  2598  200002                     	org	2097154
  2599  200002  FF                 	db	255
  2600                           
  2601                           ;Config register IDLOC3 @ 0x200003
  2602                           ;	unspecified, using default values
  2603  200003                     	org	2097155
  2604  200003  FF                 	db	255
  2605                           
  2606                           ;Config register IDLOC4 @ 0x200004
  2607                           ;	unspecified, using default values
  2608  200004                     	org	2097156
  2609  200004  FF                 	db	255
  2610                           
  2611                           ;Config register IDLOC5 @ 0x200005
  2612                           ;	unspecified, using default values
  2613  200005                     	org	2097157
  2614  200005  FF                 	db	255
  2615                           
  2616                           ;Config register IDLOC6 @ 0x200006
  2617                           ;	unspecified, using default values
  2618  200006                     	org	2097158
  2619  200006  FF                 	db	255
  2620                           
  2621                           ;Config register IDLOC7 @ 0x200007
  2622                           ;	unspecified, using default values
  2623  200007                     	org	2097159
  2624  200007  FF                 	db	255
  2625                           
  2626                           	psect	config
  2627                           
  2628                           ;Config register CONFIG1L @ 0x300000
  2629                           ;	PLL Prescaler Selection bits
  2630                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2631                           ;	System Clock Postscaler Selection bits
  2632                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2633                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2634                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2635  300000                     	org	3145728
  2636  300000  00                 	db	0
  2637                           
  2638                           ;Config register CONFIG1H @ 0x300001
  2639                           ;	Oscillator Selection bits
  2640                           ;	FOSC = HS, HS oscillator (HS)
  2641                           ;	Fail-Safe Clock Monitor Enable bit
  2642                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2643                           ;	Internal/External Oscillator Switchover bit
  2644                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2645  300001                     	org	3145729
  2646  300001  0C                 	db	12
  2647                           
  2648                           ;Config register CONFIG2L @ 0x300002
  2649                           ;	Power-up Timer Enable bit
  2650                           ;	PWRT = OFF, PWRT disabled
  2651                           ;	Brown-out Reset Enable bits
  2652                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2653                           ;	Brown-out Reset Voltage bits
  2654                           ;	BORV = 3, Minimum setting 2.05V
  2655                           ;	USB Voltage Regulator Enable bit
  2656                           ;	VREGEN = OFF, USB voltage regulator disabled
  2657  300002                     	org	3145730
  2658  300002  1F                 	db	31
  2659                           
  2660                           ;Config register CONFIG2H @ 0x300003
  2661                           ;	Watchdog Timer Enable bit
  2662                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2663                           ;	Watchdog Timer Postscale Select bits
  2664                           ;	WDTPS = 32768, 1:32768
  2665  300003                     	org	3145731
  2666  300003  1E                 	db	30
  2667                           
  2668                           ; Padding undefined space
  2669  300004                     	org	3145732
  2670  300004  FF                 	db	255
  2671                           
  2672                           ;Config register CONFIG3H @ 0x300005
  2673                           ;	CCP2 MUX bit
  2674                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2675                           ;	PORTB A/D Enable bit
  2676                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2677                           ;	Low-Power Timer 1 Oscillator Enable bit
  2678                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2679                           ;	MCLR Pin Enable bit
  2680                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2681  300005                     	org	3145733
  2682  300005  81                 	db	129
  2683                           
  2684                           ;Config register CONFIG4L @ 0x300006
  2685                           ;	Stack Full/Underflow Reset Enable bit
  2686                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2687                           ;	Single-Supply ICSP Enable bit
  2688                           ;	LVP = OFF, Single-Supply ICSP disabled
  2689                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2690                           ;	ICPRT = OFF, ICPORT disabled
  2691                           ;	Extended Instruction Set Enable bit
  2692                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2693                           ;	Background Debugger Enable bit
  2694                           ;	DEBUG = 0x1, unprogrammed default
  2695  300006                     	org	3145734
  2696  300006  81                 	db	129
  2697                           
  2698                           ; Padding undefined space
  2699  300007                     	org	3145735
  2700  300007  FF                 	db	255
  2701                           
  2702                           ;Config register CONFIG5L @ 0x300008
  2703                           ;	Code Protection bit
  2704                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2705                           ;	Code Protection bit
  2706                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2707                           ;	Code Protection bit
  2708                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2709                           ;	Code Protection bit
  2710                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2711  300008                     	org	3145736
  2712  300008  0F                 	db	15
  2713                           
  2714                           ;Config register CONFIG5H @ 0x300009
  2715                           ;	Boot Block Code Protection bit
  2716                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2717                           ;	Data EEPROM Code Protection bit
  2718                           ;	CPD = OFF, Data EEPROM is not code-protected
  2719  300009                     	org	3145737
  2720  300009  C0                 	db	192
  2721                           
  2722                           ;Config register CONFIG6L @ 0x30000A
  2723                           ;	Write Protection bit
  2724                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2725                           ;	Write Protection bit
  2726                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2727                           ;	Write Protection bit
  2728                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2729                           ;	Write Protection bit
  2730                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2731  30000A                     	org	3145738
  2732  30000A  0F                 	db	15
  2733                           
  2734                           ;Config register CONFIG6H @ 0x30000B
  2735                           ;	Configuration Register Write Protection bit
  2736                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2737                           ;	Boot Block Write Protection bit
  2738                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2739                           ;	Data EEPROM Write Protection bit
  2740                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2741  30000B                     	org	3145739
  2742  30000B  E0                 	db	224
  2743                           
  2744                           ;Config register CONFIG7L @ 0x30000C
  2745                           ;	Table Read Protection bit
  2746                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2747                           ;	Table Read Protection bit
  2748                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2749                           ;	Table Read Protection bit
  2750                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2751                           ;	Table Read Protection bit
  2752                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2753  30000C                     	org	3145740
  2754  30000C  0F                 	db	15
  2755                           
  2756                           ;Config register CONFIG7H @ 0x30000D
  2757                           ;	Boot Block Table Read Protection bit
  2758                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2759  30000D                     	org	3145741
  2760  30000D  40                 	db	64
  2761                           tosu	equ	0xFFF
  2762                           tosh	equ	0xFFE
  2763                           tosl	equ	0xFFD
  2764                           stkptr	equ	0xFFC
  2765                           pclatu	equ	0xFFB
  2766                           pclath	equ	0xFFA
  2767                           pcl	equ	0xFF9
  2768                           tblptru	equ	0xFF8
  2769                           tblptrh	equ	0xFF7
  2770                           tblptrl	equ	0xFF6
  2771                           tablat	equ	0xFF5
  2772                           prodh	equ	0xFF4
  2773                           prodl	equ	0xFF3
  2774                           indf0	equ	0xFEF
  2775                           postinc0	equ	0xFEE
  2776                           postdec0	equ	0xFED
  2777                           preinc0	equ	0xFEC
  2778                           plusw0	equ	0xFEB
  2779                           fsr0h	equ	0xFEA
  2780                           fsr0l	equ	0xFE9
  2781                           wreg	equ	0xFE8
  2782                           indf1	equ	0xFE7
  2783                           postinc1	equ	0xFE6
  2784                           postdec1	equ	0xFE5
  2785                           preinc1	equ	0xFE4
  2786                           plusw1	equ	0xFE3
  2787                           fsr1h	equ	0xFE2
  2788                           fsr1l	equ	0xFE1
  2789                           bsr	equ	0xFE0
  2790                           indf2	equ	0xFDF
  2791                           postinc2	equ	0xFDE
  2792                           postdec2	equ	0xFDD
  2793                           preinc2	equ	0xFDC
  2794                           plusw2	equ	0xFDB
  2795                           fsr2h	equ	0xFDA
  2796                           fsr2l	equ	0xFD9
  2797                           status	equ	0xFD8

Data Sizes:
    Strings     76
    Constant    0
    Data        32
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     63      84
    BANK0           160      0      16
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_puts@data	PTR unsigned char  size(2) Largest target is 17
		 -> STR_8(CODE[15]), STR_7(CODE[12]), STR_6(CODE[17]), STR_5(CODE[15]), 
		 -> STR_4(CODE[17]), STR_3(CODE[2]), STR_2(CODE[15]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_teclado_getc
    _LCD_puts->_LCD_putc
    _LCD_init->_LCD_command
    _LCD_clear->_LCD_command
    _LCD_gotoxy->_LCD_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                44    44      0    5368
                                             19 COMRAM    44    44      0
                          _LCD_clear
                         _LCD_gotoxy
                           _LCD_init
                           _LCD_puts
                       _eeprom_readx
                      _eeprom_writex
                       _teclado_getc
                       _teclado_init
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teclado_getc                                        19    19      0     542
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 (1) _eeprom_writex                                        3     0      3     652
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _eeprom_readx                                         2     0      2     630
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_puts                                             6     3      3    1427
                                              1 COMRAM     6     3      3
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_putc                                             1     1      0     120
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0     240
                                              1 COMRAM     1     1      0
                          _LCD_clear
                        _LCD_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            0     0      0     120
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _LCD_gotoxy                                           5     4      1     887
                                              1 COMRAM     5     4      1
                        _LCD_command
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          1     1      0     120
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_clear
     _LCD_command
   _LCD_gotoxy
     _LCD_command
   _LCD_init
     _LCD_clear
       _LCD_command
     _LCD_command
   _LCD_puts
     _LCD_putc
   _eeprom_readx
   _eeprom_writex
   _teclado_getc
   _teclado_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      10       5       10.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3F      54       1       88.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      64      20        0.0%
DATA                 0      0      64       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Sep 29 07:36:34 2020

                     l31 084E                       l40 0922                       l41 094E  
                     l38 08CA                       l71 100A                       l39 08F6  
                     l81 1088                       l73 1020                       l90 0F2C  
                     l83 109E                       l75 1036                       l92 0F42  
                     l84 10A0                       l76 1038                       l85 10B0  
                     l77 105C                       l69 0FF4                       l94 0F58  
                     l95 0F5A                       l79 1072                       l96 0F82  
                     l88 0F16                       l98 0F98                       u10 0F10  
                     u11 0F0C                       u20 0F26                       u21 0F22  
                     u30 0F3C                       u31 0F38                       u40 0F52  
                     u41 0F4E                       u50 0F7C                       u51 0F78  
                     u60 0F92                       u61 0F8E                       u70 0FA8  
                     u71 0FA4                       u80 0FBE                       u81 0FBA  
                     u90 0FEE                       u91 0FEA                      l100 0FAE  
                    l102 0FC4                      l103 0FC6                      l104 0FDA  
                    l200 0ECC                      l113 124E                      l201 0EC8  
                    l123 11BC                      l131 12BC                      l107 114C  
                    l203 0EFC                      l222 12A8                      l216 126C  
                    l152 0D24                      l144 12B4                      l161 0D66  
                    l153 0D20                      l162 0D62                      l219 127A  
                    l171 0DC6                      l155 0D3A                      l172 0DC2  
                    l156 0D36                      l181 0E28                      l165 0D9A  
                    l182 0E24                      l174 0DDC                      l166 0D96  
                    l158 0D50                      l191 0E8A                      l175 0DD8  
                    l159 0D4C                      l192 0E86                      l184 0E3E  
                    l168 0DB0                      l185 0E3A                      l169 0DAC  
                    l194 0EA0                      l178 0E12                      l195 0E9C  
                    l187 0E54                      l179 0E0E                      l188 0E50  
                    l197 0EB6                      l198 0EB2                      l900 0F02  
                    l910 0F3C                      l902 0F10                      l920 0F6E  
                    l912 0F44                      l904 0F18                      l930 0FA8  
                    l922 0F7C                      l914 0F52                      l906 0F26  
                    l932 0FB0                      l924 0F84                      l916 0F5C  
                    l908 0F2E                      l940 12B6                      l934 0FBE  
                    l926 0F92                      l918 0F64                      l950 1004  
                    l942 0FDE                      l936 0FC8                      l928 0F9A  
                    l960 103A                      l952 100C                      l944 0FE0  
                    l938 0FD0                      l970 106C                      l962 1040  
                    l954 101A                      l946 0FEE                      l980 10A2  
                    l972 1074                      l964 1048                      l956 1022  
                    l948 0FF6                      l982 10A8                      l974 1082  
                    l966 1056                      l958 1030                      l976 108A  
                    l968 105E                      l898 0F00                      l978 1098  
                    l998 10B2                      u100 1004                      u101 1000  
                    u110 101A                      u111 1016                      u120 1030  
                    u121 102C                      u130 1056                      u131 1052  
                    u140 106C                      u141 1068                      u150 1082  
                    u151 107E                      u160 1098                      u161 1094  
                    u620 127A                      u700 0D86                      u621 1276  
                    u701 0D82                      u630 124E                      u710 0DA8  
                    u631 124A                      u711 0DA4                      u800 0E76  
                    u720 0DBE                      u801 0E72                      u721 0DBA  
                    u641 0CEA                      u810 0E98                      u730 0DD4  
                    u650 0D10                      u811 0E94                      u731 0DD0  
                    u651 0D0C                      u820 0EAE                      u740 0DEA  
                    u660 0D32                      u900 08E6                      u821 0EAA  
                    u741 0DE6                      u661 0D2E                      u901 08E2  
                    u830 0EC4                      u750 0DFE                      u670 0D48  
                    u910 0912                      u831 0EC0                      u751 0DFA  
                    u671 0D44                      u911 090E                      u840 0EDA  
                    u760 0E20                      u680 0D5E                      u920 093E  
                    u841 0ED6                      u761 0E1C                      u681 0D5A  
                    u921 093A                      u850 0EFA                      u770 0E36  
                    u690 0D74                      u930 0986                      u851 0EF6  
                    u771 0E32                      u691 0D70                      u931 0982  
                    u780 0E4C                      u940 0998                      u781 0E48  
                    u941 0994                      u861 085C                      u790 0E62  
                    u950 09AA                      u791 0E5E                      u951 09A6  
                    u871 0884                      u960 09BC                      u961 09B8  
                    u881 0896                      u970 09CE                      u890 08BA  
                    u971 09CA                      u891 08B6                      u980 09E0  
                    u981 09DC                      u990 09F2                      u991 09EE  
            ?_LCD_gotoxy 0002                      wreg 000FE8                     l1000 10C0  
                   l1010 10CA                     l1002 10C2                     l1020 10D4  
                   l1012 10CC                     l1004 10C4                     l1030 10DE  
                   l1022 10D6                     l1014 10CE                     l1006 10C6  
                   l1040 10E8                     l1032 10E0                     l1024 10D8  
                   l1016 10D0                     l1008 10C8                     l1050 1102  
                   l1042 10F2                     l1034 10E2                     l1026 10DA  
                   l1018 10D2                     l1060 111C                     l1052 1104  
                   l1044 10FC                     l1036 10E4                     l1028 10DC  
                   l1070 1126                     l1062 111E                     l1054 1106  
                   l1046 10FE                     l1038 10E6                     l1080 1148  
                   l1072 1128                     l1064 1120                     l1056 1108  
                   l1048 1100                     l1400 123A                     l1074 1132  
                   l1066 1122                     l1058 1112                     l1402 123C  
                   l1410 0CF6                     l1082 12AA                     l1076 113C  
                   l1068 1124                     l1420 0D14                     l1404 0CE0  
                   l1084 12B2                     l1500 0970                     l1078 1142  
                   l1430 0DFE                     l1422 0D74                     l1406 0CF2  
                   l1510 09BC                     l1502 0976                     l1360 129C  
                   l1440 0EDA                     l1432 0E02                     l1424 0D86  
                   l1416 0CFE                     l1408 0CF2                     l1600 0C36  
                   l1520 0A0C                     l1512 09CE                     l1504 0986  
                   l1362 12A6                     l1370 1268                     l1442 0EDE  
                   l1434 0E62                     l1426 0D8A                     l1418 0D10  
                   l1610 0C82                     l1602 0C40                     l1530 0A4E  
                   l1522 0A1C                     l1514 09E0                     l1506 0998  
                   l1450 0856                     l1380 1166                     l1372 126A  
                   l1444 0EFA                     l1436 0E76                     l1428 0DEA  
                   l1620 0CBA                     l1612 0C86                     l1604 0C50  
                   l1540 0AA2                     l1532 0A68                     l1524 0A20  
                   l1516 09F2                     l1508 09AA                     l1460 086A  
                   l1452 0862                     l1630 118E                     l1382 1170  
                   l1390 11B4                     l1374 1150                     l1366 1250  
                   l1438 0E7A                     l1622 0CBE                     l1614 0C9C  
                   l1606 0C68                     l1550 0AF2                     l1542 0AAA  
                   l1534 0A74                     l1526 0A2C                     l1518 09FC  
                   l1470 086A                     l1462 086A                     l1454 086A  
                   l1376 1154                     l1368 1260                     l1624 0CC8  
                   l1616 0CA0                     l1608 0C6C                     l1560 0B44  
                   l1552 0AFE                     l1544 0AC4                     l1536 0A7C  
                   l1528 0A3C                     l1480 087A                     l1472 086A  
                   l1464 086A                     l1456 086A                     l1448 084E  
                   l1378 115C                     l1618 0CB6                     l1570 0B88  
                   l1562 0B54                     l1554 0B06                     l1546 0AD0  
                   l1538 0A96                     l1490 0912                     l1482 088C  
                   l1474 086E                     l1466 086A                     l1458 086A  
                   l1388 117A                     l1396 1212                     l1580 0BD2  
                   l1572 0B9E                     l1564 0B6A                     l1556 0B26  
                   l1548 0AD8                     l1492 093E                     l1484 089E  
                   l1476 0872                     l1468 086A                     l1398 121E  
                   l1590 0C02                     l1574 0BA2                     l1566 0B6E  
                   l1558 0B3A                     l1494 0952                     l1486 08BA  
                   l1478 0876                     l1592 0C04                     l1576 0BB8  
                   l1568 0B78                     l1584 0BDA                     l1496 0956  
                   l1488 08E6                     l1594 0C1A                     l1586 0BE4  
                   l1578 0BBC                     l1498 0960                     l1596 0C1C  
                   l1588 0BF4                     l1598 0C32           ??_eeprom_readx 0003  
                   STR_1 0832                     STR_2 0832                     STR_3 084B  
                   STR_4 0801                     STR_5 0823                     STR_6 0812  
                   STR_7 0841                     STR_8 0832             ?_LCD_command 0001  
                   u1000 0A4E                     u1001 0A4A                     u1010 0A68  
                   u1011 0A64                     u1020 0A96                     u1021 0A92  
                   u1030 0AC4                     u1031 0AC0                     u1040 0AF2  
                   u1041 0AEE                     u1050 0B3A                     u1107 0BFA  
                   u1051 0B36                     u1117 0C0E                     u1207 0E7C  
                   u1127 0C26                     u1217 103C                     u1137 0C5A  
                   u1307 112C                     u1227 1044                     u1147 0C76  
                   u1067 0B5E                     u1317 1136                     u1237 10A4  
                   u1157 0C90                     u1077 0B92                     _LATB 000F8A  
                   u1327 0F5E                     u1247 10AC                     u1167 0CAA  
                   u1087 0BAC                     u1337 0F68                     u1257 10B8  
                   u1177 0D16                     u1097 0BC6                     u1347 0FCA  
                   u1267 10EC                     u1187 0D8C                     u1357 0FD4  
                   u1277 10F6                     u1197 0E04                     u1287 110C  
                   u1297 1116              main@inclave 0026                     _main 084E  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   start 0000       __size_of_LCD_clear 0008             ___param_bank 000000  
       __end_of_LCD_init 114E         __end_of_LCD_putc 10B2         __end_of_LCD_puts 1250  
                  ?_main 0001                    _EEADR 000FA9                    _PORTB 000F81  
                  _PORTC 000F82                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95          ??_eeprom_writex 0004                    tablat 000FF5  
                  plusw1 000FE3                    plusw2 000FDB                    status 000FD8  
    __size_of_LCD_gotoxy 0070          __initialization 11BE             __end_of_main 0CE0  
            LCD_gotoxy@x 0006              LCD_gotoxy@y 0002                   ??_main 0014  
          __activetblptr 000002        __end_of_LCD_clear 12BE                   _EEDATA 000FA8  
                 _EECON2 000FA7      eeprom_readx@address 0001     __end_of_eeprom_readx 12AA  
           __pdataCOMRAM 0040             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 1208     __size_of_LCD_command 00DE                ?_LCD_init 0001  
              ?_LCD_putc 0001                ?_LCD_puts 0002            ___rparam_used 000001  
         __pcstackCOMRAM 0001             __pidataBANK0 128C           LCD_puts@nBytes 0004  
              LCD_puts@i 0007             ??_LCD_gotoxy 0003       teclado_getc@letras 0001  
      eeprom_writex@data 0003            ?_teclado_getc 0001             LCD_puts@data 0002  
          ?_teclado_init 0001           main@direccion1 003B           main@direccion2 003C  
         main@direccion3 003D           main@direccion4 003E               ??_LCD_init 0002  
             ??_LCD_putc 0001               ??_LCD_puts 0005       __end_of_LCD_gotoxy 11BE  
         ??_teclado_getc 0001           ??_teclado_init 0001                  __Hparam 0000  
                __Lparam 0000    __size_of_eeprom_readx 000E             __psmallconst 0800  
                __pcinit 11BE            teclado_getc@i 0012                  __ramtop 0800  
                __ptext0 084E                  __ptext1 12AA                  __ptext2 0CE0  
                __ptext3 1250                  __ptext4 129C                  __ptext5 1212  
                __ptext6 0FDC                  __ptext7 10B2                  __ptext8 12B6  
                __ptext9 114E    __end_of_eeprom_writex 127C                  main@IZQ 001E  
              _LCD_clear 12B6     end_of_initialization 1208             _eeprom_readx 129C  
          __Lmediumconst 0000         main@countinclave 0039                  postdec1 000FE5  
                postinc0 000FEE                  postinc2 000FDE                _PORTDbits 000F83  
              _TRISDbits 000F95               ?_LCD_clear 0001     eeprom_writex@address 0001  
      __size_of_LCD_init 009C        __size_of_LCD_putc 00D6        __size_of_LCD_puts 003E  
          __pidataCOMRAM 127C     __end_of_teclado_getc 0EFE     __end_of_teclado_init 12B6  
    start_initialization 11BE            ??_LCD_command 0001               LCD_putc@ch 0001  
        main@clave1check 0031          main@clave2check 0033          main@clave3check 0035  
        main@clave4check 0037              __pdataBANK0 0060      LCD_gotoxy@DDRAMAddr 0005  
      teclado_getc@F3196 0060              __pbssCOMRAM 0050              ??_LCD_clear 0002  
      teclado_getc@valor 0011      __end_of_LCD_command 0FDC              __smallconst 0800  
               _LATDbits 000F8C                 _LCD_init 10B2                 _LCD_putc 0FDC  
               _LCD_puts 1212    __size_of_teclado_getc 021E    __size_of_teclado_init 000C  
              main@F3706 0050                main@F3722 0048                main@F3724 0040  
              main@tecla 003F              _INTCON2bits 000FF1                copy_data0 11D2  
              copy_data1 11F2              _LCD_command 0EFE             _teclado_getc 0CE0  
           _teclado_init 12AA               _EECON1bits 000FA6                 __Hrparam 0000  
               __Lrparam 0000   __size_of_eeprom_writex 002C      main@clavechecktotal 002B  
               __ptext10 0EFE            __size_of_main 0492                 main@DERE 0016  
             _LCD_gotoxy 114E               _INTCONbits 000FF2            _eeprom_writex 1250  
         ?_eeprom_writex 0001            ?_eeprom_readx 0001           LCD_command@cmd 0001  
